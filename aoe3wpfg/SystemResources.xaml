<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:aoe3wpfg" xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Permanently load these assets to prevent in-game hitching -->
    <local:Age3Precache x:Key="precache">
        <local:Age3Precache.Paths>
            <system:String>Data\wpfg\resources\art\buildings</system:String>
            <system:String>Data\wpfg\resources\art\homecity</system:String>
            <system:String>Data\wpfg\resources\art\nuggets:-nopremultiplyalpha</system:String>
            <system:String>Data\wpfg\resources\art\objects</system:String>
            <system:String>Data\wpfg\resources\art\terrain</system:String>
            <system:String>Data\wpfg\resources\art\trade_route</system:String>
            <system:String>Data\wpfg\resources\art\units:-nopremultiplyalpha</system:String>
            <system:String>Data\wpfg\resources\art</system:String>
            <system:String>Data\wpfg\resources\images\icons\abilities</system:String>
            <system:String>Data\wpfg\resources\images\icons\banners</system:String>
            <system:String>Data\wpfg\resources\images\icons\command</system:String>
            <system:String>Data\wpfg\resources\images\icons\eso</system:String>
            <system:String>Data\wpfg\resources\images\icons\fire_pit</system:String>
            <system:String>Data\wpfg\resources\images\icons\flags</system:String>
            <system:String>Data\wpfg\resources\images\icons\home_city</system:String>
            <system:String>Data\wpfg\resources\images\icons\hp_city</system:String>
            <system:String>Data\wpfg\resources\images\icons\ingame</system:String>
            <system:String>Data\wpfg\resources\images\icons\native_allies</system:String>
            <system:String>Data\wpfg\resources\images\icons\politicians</system:String>
            <system:String>Data\wpfg\resources\images\icons\portraits</system:String>
            <system:String>Data\wpfg\resources\images\icons\regiments</system:String>
            <system:String>Data\wpfg\resources\images\icons\techs</system:String>
            <system:String>Data\wpfg\resources\images\techtree</system:String>
            <system:String>Data\wpfg\resources\images\politiciandlg</system:String>
            <system:String>Data\wpfg\resources\images\hud</system:String>
            <system:String>Data\wpfg\resources\images\homecity</system:String>
            <system:String>Data\wpfg\resources\images\multiplayer</system:String>
        </local:Age3Precache.Paths>
    </local:Age3Precache>
    <local:Age3StringLookup x:Key="StringDB"/>
    <local:Age3UISettings x:Key="uiSettings" />

    <!-- Options Proxy  -->
    <local:Age3OptionsProxy x:Key="optionsProxy" />

    <DataTemplate DataType="{x:Type local:Age3String}">
        <TextBlock Text="{Binding Text}"/>
    </DataTemplate>

    <DataTemplate x:Key="{x:Type BitmapImage}" DataType="{x:Type BitmapImage}">
        <Image Source="{Binding }"/>
    </DataTemplate>

    <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    <!-- converter for data binding radio buttons to an enum value. -->
    <local:Age3EnumValueToBoolConverter x:Key="EnumToBool"/>
    <local:Age3BoolFlipConverter x:Key="BoolFlipConverter"/>

    <Style x:Key="Age3FocusBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="-10,1,-10,1"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderBrush" Value="NavajoWhite"/>
    </Style>

    <Style x:Key="Age3FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Style="{StaticResource Age3FocusBorderStyle}" Margin="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:Age3KeyboardFocusBorder}" TargetType="local:Age3KeyboardFocusBorder">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:Age3KeyboardFocusBorder">
                        <Grid>
                            <Border Name="FocusBorder" Style="{StaticResource Age3FocusBorderStyle}"/>
                            <ContentPresenter Name="PART_Content"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>


    <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ItemsControl}" x:Key="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type UserControl}" x:Key="{x:Type UserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="WindowStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowState" Value="Maximized" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>

    <Style TargetType="Window" x:Key="ScenarioWindows">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>

    <Style TargetType="Viewbox" x:Key="ViewboxMain">
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <!--Defining Frame properties-->
    <Style TargetType="Frame">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Defining Page properties-->
    <Style TargetType="Page">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Page">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining Panel properties-->
    <Style TargetType="Panel">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--Defining List Box properties-->
    <Style TargetType="ListBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="95"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="2" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                        <ScrollViewer Margin="0" Focusable="false" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                            <ItemsPresenter Margin="2" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Border.Background" Value="#AAA" />
                            <Setter Property="Border.BorderBrush" Value="#AAA" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining Combo Box Item properties-->
    <Style TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontFamily" Value="Trajan Pro"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#66502d"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#66502d"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ToolTip Sizes-->
    <Style TargetType="ToolTip">
        <Setter Property="DataContext" Value="{StaticResource optionsProxy}"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="MaxWidth" Value="500"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="#d6c894"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="VerticalOffset" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Opacity" Value="{Binding Path=OptionTooltipBackgroundAlpha}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="Border" Background="#34221c" BorderBrush="#6f683f" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter Margin="7,5,7,5" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>

    <BitmapImage x:Key="border_h" UriSource="/resources/border_h.png" />
    <BitmapImage x:Key="border_v" UriSource="/resources/border_v.png" />
    <BitmapImage x:Key="close_icon" UriSource="/resources/close_icon.png" />

    <!--Defining Button resource_gold-->
    <ImageBrush x:Key="button_main_normal" ImageSource="/resources/button_mainmenu.png" Stretch="Fill" />

    <ImageBrush x:Key="button_main_greyed" ImageSource="/resources/button_mainmenu_greyed.png" Stretch="Fill" />

    <ImageBrush x:Key="button_submenu_over" ImageSource="/resources/button_submenu_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_submenu_click" ImageSource="/resources/button_submenu_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_hud_over" ImageSource="/resources/button_hud_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_hud_click" ImageSource="/resources/button_hud_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_aboardtoggle_over" ImageSource="/resources/button_aboardtoggle_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_aboardtoggle_click" ImageSource="/resources/button_aboardtoggle_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_aboardtoggle2_over" ImageSource="/resources/button_aboardtoggle2_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_aboardtoggle2_click" ImageSource="/resources/button_aboardtoggle2_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_tab_off_over" ImageSource="/resources/button_tab_off_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_tab_off_click" ImageSource="/resources/button_tab_off_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_tab_on_over" ImageSource="/resources/button_tab_on_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_tab_on_click" ImageSource="/resources/button_tab_on_click.png" Stretch="Fill" />

    <ImageBrush x:Key="button_hudcompass_over" ImageSource="/resources/button_hudcompass_over.png" Stretch="Fill" />
    <ImageBrush x:Key="button_hudcompass_click" ImageSource="/resources/button_hudcompass_click.png" Stretch="Fill" />

    <ImageBrush x:Key="queuebg" ImageSource="/resources/images/hud/actionboard_queuebg.png" Stretch="Fill" />

    <ImageBrush x:Key="button_filemanager_selected" ImageSource="/resources/images/uifilemanager/uifilemanager_list_selected.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_filemanager_hover" ImageSource="/resources/images/uifilemanager/uifilemanager_list_hover.png" Stretch="Uniform" />

    <ImageBrush x:Key="button_filemanager_selected_fill" ImageSource="/resources/images/uifilemanager/uifilemanager_list_selected.png" Stretch="Fill" />
    <ImageBrush x:Key="button_filemanager_hover_fill" ImageSource="/resources/images/uifilemanager/uifilemanager_list_hover.png" Stretch="Fill" />

    <ImageBrush x:Key="button_back_normal" ImageSource="/resources/button_back_normal.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_back_hover" ImageSource="/resources/button_back_hover.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_back_large_normal" ImageSource="/resources/button_back_large_normal.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_back_large_hover" ImageSource="/resources/button_back_large_hover.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_back_large_disabled" ImageSource="/resources/button_back_large_disabled.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_forward_large_normal" ImageSource="/resources/button_forward_large_normal.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_forward_large_hover" ImageSource="/resources/button_forward_large_hover.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_forward_large_disabled" ImageSource="/resources/button_forward_large_disabled.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_back_divider" ImageSource="/resources/button_back_divider.png" Stretch="Uniform" />

    <ImageBrush x:Key="button_homecity_normal" ImageSource="/resources/button_homecity_normal.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_homecity_hover" ImageSource="/resources/button_homecity_hover.png" Stretch="Uniform" />

    <ImageBrush x:Key="lock_normal" ImageSource="/resources/lock_icon.png" Stretch="Uniform" />

    <ImageBrush x:Key="tick_icon" ImageSource="/resources/tick_icon.png" Stretch="Uniform" />

    <ImageBrush x:Key="main_menu_bg" ImageSource="/resources/menubg.png" Viewport="0,0,285,1080" ViewportUnits="Absolute" TileMode="Tile" />
    <ImageBrush x:Key="title_line" ImageSource="/resources/title_line.png" Stretch="Uniform" />
    <ImageBrush x:Key="button_main_stretched" ImageSource="/resources/button_mainmenu.png" Stretch="Fill" />

    <ImageBrush x:Key="square_2px" ImageSource="/resources/square_2px.png" Stretch="Fill" />

    <ImageBrush x:Key="wood_tile" ImageSource="/resources/wood.png" />

    <ImageBrush x:Key="ch_pattern" ImageSource="/resources/ch_pattern.png" Viewport="0,0,256,256" ViewportUnits="Absolute" TileMode="Tile" />
    <ImageBrush x:Key="ch_divider" ImageSource="/resources/chdivider.png" Viewport="0,0,55,126" ViewportUnits="Absolute" TileMode="Tile" />

    <BitmapImage x:Key="combo_arrow" UriSource="/resources/combo_arrow.png" />
    <BitmapImage x:Key="combo_arrow_disabled" UriSource="/resources/combo_arrow_disabled.png" />

    <ImageBrush x:Key="objective_checkbox_empty" ImageSource="/resources/images/hud/objective_checkbox_empty.png" />
    <ImageBrush x:Key="objective_checkbox_ticked" ImageSource="/resources/images/hud/objective_checkbox_ticked.png" />

    <!--Defining Skirmish icons-->
    <ImageBrush x:Key="skirmish_titlebarbg" ImageSource="/resources/images/skirmish/skirmish_titlebarbg.png" Stretch="Uniform" />
    <ImageBrush x:Key="skirmish_subtitlebarbg" ImageSource="/resources/images/skirmish/skirmish_subtitlebarbg.png" Stretch="Uniform" />
    <ImageBrush x:Key="skirmish_subtitlebarbg2" ImageSource="/resources/images/skirmish/skirmish_subtitlebarbg2.png" Stretch="Uniform" />
    <ImageBrush x:Key="skirmish_textbox" ImageSource="/resources/images/skirmish/skirmish_textbox.png" Stretch="Uniform" />

    <ImageBrush x:Key="arrow_left_white" ImageSource="/resources/arrow_left_white.png" Stretch="Uniform" />
    <ImageBrush x:Key="hc_profile" ImageSource="/resources/hc_profile.png" Stretch="Uniform" />

    <!--Defining Campaign resources-->
    <ImageBrush x:Key="campaigncard_01_normal" ImageSource="/resources/images/campaignmenu/campaignselect_01_normal.png" Stretch="Uniform" />

    <ImageBrush x:Key="campaigncard_02_normal" ImageSource="/resources/images/campaignmenu/campaignselect_02_normal.png" Stretch="Uniform" />

    <ImageBrush x:Key="campaigncard_03_normal" ImageSource="/resources/images/campaignmenu/campaignselect_03_normal.png" Stretch="Uniform" />

    <ImageBrush x:Key="demo_bg" ImageSource="/resources/images/demo/end_bg.png" Stretch="UniformToFill" />

    <ImageBrush x:Key="campaign_bg1" ImageSource="/resources/images/campaignmenu/campaign_bg1.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="campaign_bg2" ImageSource="/resources/images/campaignmenu/campaign_bg2.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="campaign_bg3" ImageSource="/resources/images/campaignmenu/campaign_bg3.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="multiplayer_bg1" ImageSource="/resources/images/multiplayer/multiplayer_bg1.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="credits_bg" ImageSource="/resources/images/credits/credits_bg.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="marble_bg" ImageSource="/resources/marblebg.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="marble_bg2" ImageSource="/resources/marblebg2.png" Stretch="UniformToFill" />

    <ImageBrush x:Key="loadscreen_smoke" ImageSource="/resources/images/uispcloadscreen/loadscreen_smoke.png" Stretch="UniformToFill" />

    <ImageBrush x:Key="campaignlevel_shadow" ImageSource="/resources/images/campaignmenu/levels/lvlcard_shadow.png" Stretch="Uniform" />

    <ImageBrush x:Key="skirmishnickname_textentry" ImageSource="/resources/images/uiskirmishnickname/uiskirmishnickname_textentry.png" Stretch="Uniform" />
    <ImageBrush x:Key="skirmishnickname_textentry_over" ImageSource="/resources/images/uiskirmishnickname/uiskirmishnickname_textentry_over.png" Stretch="Uniform" />

    <ImageBrush x:Key="skirmishnickname_textentry_fill" ImageSource="/resources/images/uiskirmishnickname/uiskirmishnickname_textentry.png" Stretch="Fill" />

    <ImageBrush x:Key="uifilemanager_line" ImageSource="/resources/images/uifilemanager/dividingline.png" Stretch="Uniform" />

    <ImageBrush x:Key="uifilemanager_bg" ImageSource="/resources/images/uifilemanager/uifilemanager_bg.png" Stretch="Uniform" />

    <!--Defining Checkbox images-->
    <ImageBrush x:Key="Checkbox_On" ImageSource="/resources/checkbox_on.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_On_Hover" ImageSource="/resources/checkbox_on_hover.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Off" ImageSource="/resources/checkbox_off.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Hover" ImageSource="/resources/checkbox_hover.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Disabled_Off" ImageSource="/resources/checkbox_disabled_off.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Disabled_On" ImageSource="/resources/checkbox_disabled_on.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Focused" ImageSource="/resources/checkbox_focused_hollow.png" Stretch="Fill" />

    <!--Defining HUD resources-->
    <ImageBrush x:Key="uiresourcesbar_bg" ImageSource="/resources/images/hud/resources_bg.png" Stretch="Uniform" />

    <BitmapImage x:Key="resource_pop" UriSource="/resources/images/hud/resource_pop.png" />
    <BitmapImage x:Key="resource_food" UriSource="/resources/images/hud/resource_food.png" />
    <BitmapImage x:Key="resource_wood" UriSource="/resources/images/hud/resource_wood.png" />
    <BitmapImage x:Key="resource_gold" UriSource="/resources/images/hud/resource_gold.png" />
    <BitmapImage x:Key="resource_dances" UriSource="/resources/images/hud/resource_dances.png" />
    <BitmapImage x:Key="resource_export" UriSource="/resources/images/hud/resource_export.png" />
    <BitmapImage x:Key="resource_idle" UriSource="/resources/images/hud/resource_idle.png" />
    <BitmapImage x:Key="resource_trading" UriSource="/resources/images/hud/resource_trading.png" />
    <BitmapImage x:Key="hud_icon_menu" UriSource="/resources/images/hud/icon_menu.png" />

    <BitmapImage x:Key="hud_compass" UriSource="/resources/images/hud/hud_compass.png" />
    <BitmapImage x:Key="hud_compass_bg" UriSource="/resources/images/hud/hud_compass_bg.png" />
    <ImageBrush x:Key="hud_icon_compass_chat" ImageSource="/resources/images/hud/icon_compass_chat.png" />
    <ImageBrush x:Key="hud_icon_compass_flare" ImageSource="/resources/images/hud/icon_compass_flare.png" />
    <BitmapImage x:Key="hud_icon_compass_mapdetails" UriSource="/resources/images/hud/icon_compass_mapdetails.png" />
    <BitmapImage x:Key="hud_icon_compass_mapdetails_military_only" UriSource="/resources/images/hud/icon_compass_mapdetails_military_only.png" />
    <BitmapImage x:Key="hud_icon_compass_mapdetails_economic_only" UriSource="/resources/images/hud/icon_compass_mapdetails_economic_only.png" />
    <ImageBrush x:Key="hud_icon_compass_summary" ImageSource="/resources/images/hud/icon_compass_summary.png" />
    <ImageBrush x:Key="hud_icon_compass_movemilitary" ImageSource="/resources/images/hud/icon_compass_movemilitary.png" />
    <ImageBrush x:Key="hud_chat_combobox" ImageSource="/resources/images/hud/hud_chat_combobox.png" />
    <ImageBrush x:Key="hud_chat_combobox_over" ImageSource="/resources/images/hud/hud_chat_combobox_over.png" />
    <ImageBrush x:Key="hud_chat_textinput" ImageSource="/resources/images/hud/hud_chat_textinput.png" />

    <ImageBrush x:Key="hud_chat_combobox_itembg" ImageSource="/resources/images/hud/hud_chat_combobox_itembg.png" />
    <ImageBrush x:Key="hud_chat_expand_normal" ImageSource="/resources/images/hud/chat_expand_normal.png" />
    <ImageBrush x:Key="hud_chat_expand_hover" ImageSource="/resources/images/hud/chat_expand_hover.png" />
    <ImageBrush x:Key="hud_chat_expand_press" ImageSource="/resources/images/hud/chat_expand_press.png" />
    <ImageBrush x:Key="hud_chat_contract_normal" ImageSource="/resources/images/hud/chat_contract_normal.png" />
    <ImageBrush x:Key="hud_chat_contract_hover" ImageSource="/resources/images/hud/chat_contract_hover.png" />
    <ImageBrush x:Key="hud_chat_contract_press" ImageSource="/resources/images/hud/chat_contract_press.png" />

    <BitmapImage x:Key="hud_trade_routes" UriSource="/resources/images/hud/trade_routes.png" />
    <ImageBrush x:Key="recorded_loop" ImageSource="/resources/images/hud/recorded_loop.png" />
    <ImageBrush x:Key="recorded_play" ImageSource="/resources/images/hud/recorded_play.png" />
    <ImageBrush x:Key="recorded_pause" ImageSource="/resources/images/hud/recorded_pause.png" />
    <ImageBrush x:Key="recorded_slow" ImageSource="/resources/images/hud/recorded_slow.png" />
    <ImageBrush x:Key="recorded_med" ImageSource="/resources/images/hud/recorded_med.png" />
    <ImageBrush x:Key="recorded_fast" ImageSource="/resources/images/hud/recorded_fast.png" />
    <ImageBrush x:Key="recorded_loop_over" ImageSource="/resources/images/hud/recorded_loop_over.png" />
    <ImageBrush x:Key="recorded_play_over" ImageSource="/resources/images/hud/recorded_play_over.png" />
    <ImageBrush x:Key="recorded_pause_over" ImageSource="/resources/images/hud/recorded_pause_over.png" />
    <ImageBrush x:Key="recorded_slow_over" ImageSource="/resources/images/hud/recorded_slow_over.png" />
    <ImageBrush x:Key="recorded_med_over" ImageSource="/resources/images/hud/recorded_med_over.png" />
    <ImageBrush x:Key="recorded_fast_over" ImageSource="/resources/images/hud/recorded_fast_over.png" />
    <ImageBrush x:Key="fow_toggle" ImageSource="/resources/images/hud/fow_toggle.png" />
    <ImageBrush x:Key="fow_toggle_over" ImageSource="/resources/images/hud/fow_toggle_over.png" />
    <ImageBrush x:Key="realtime_toggle" ImageSource="/resources/images/hud/skiptorealtime.png" />
    <ImageBrush x:Key="realtime_toggle_over" ImageSource="/resources/images/hud/skiptorealtime_over.png" />


    <BitmapImage x:Key="icon_techtree" UriSource="/resources/images/hud/icon_techtree.png" />

    <BitmapImage x:Key="hc_add" UriSource="/resources/hc_add.png" />
    <BitmapImage x:Key="hc_remove" UriSource="/resources/hc_remove.png" />
    <BitmapImage x:Key="hc_edit" UriSource="/resources/hc_edit.png" />

    <!--Defining Multiplayer resources-->
    <BitmapImage x:Key="multiplayer_quickicon_chat" UriSource="/resources/images/multiplayer/quickicon_chat.png" />
    <BitmapImage x:Key="multiplayer_quickicon_clanbrowse" UriSource="/resources/images/multiplayer/quickicon_clanbrowse.png" />
    <BitmapImage x:Key="multiplayer_quickicon_exit" UriSource="/resources/images/multiplayer/quickicon_exit.png" />
    <BitmapImage x:Key="multiplayer_quickicon_friends" UriSource="/resources/images/multiplayer/quickicon_friends.png" />
    <BitmapImage x:Key="multiplayer_quickicon_ladder" UriSource="/resources/images/multiplayer/quickicon_ladder.png" />
    <BitmapImage x:Key="multiplayer_quickicon_settings" UriSource="/resources/images/multiplayer/quickicon_settings.png" />
    <BitmapImage x:Key="multiplayer_profile" UriSource="/resources/images/multiplayer/profile_icon.png" />

    <BitmapImage x:Key="xbox_platform_logo" UriSource="/resources/images/logo/Xbox_logo.png" />
    <BitmapImage x:Key="world_platform_logo" UriSource="/resources/images/logo/Web_logo.png" />

    <BitmapImage x:Key="friends_accept" UriSource="/resources/images/multiplayer/friend_accept.png" />
    <BitmapImage x:Key="friends_block" UriSource="/resources/images/multiplayer/friend_block.png" />
    <BitmapImage x:Key="friends_cancel" UriSource="/resources/images/multiplayer/friend_cancel.png" />
    <BitmapImage x:Key="friends_decline" UriSource="/resources/images/multiplayer/friend_decline.png" />
    <BitmapImage x:Key="friends_mute" UriSource="/resources/images/multiplayer/friend_mute.png" />
    <BitmapImage x:Key="friends_report" UriSource="/resources/images/multiplayer/friend_report.png" />
    <BitmapImage x:Key="friends_request" UriSource="/resources/images/multiplayer/friend_request.png" />
    <BitmapImage x:Key="friends_unblock" UriSource="/resources/images/multiplayer/friend_unblock.png" />
    <BitmapImage x:Key="friends_unmute" UriSource="/resources/images/multiplayer/friend_unmute.png" />
    <BitmapImage x:Key="friends_clan_invite" UriSource="/resources/images/multiplayer/invitation_pending.png" />

    <BitmapImage x:Key="clan_rank_bronze" UriSource="/resources/images/multiplayer/clan_rank_bronze.png" />
    <BitmapImage x:Key="clan_rank_silver" UriSource="/resources/images/multiplayer/clan_rank_silver.png" />
    <BitmapImage x:Key="clan_rank_gold" UriSource="/resources/images/multiplayer/clan_rank_gold.png" />
    <BitmapImage x:Key="clan_promote" UriSource="/resources/images/multiplayer/clan_promote.png" />
    <BitmapImage x:Key="clan_demote" UriSource="/resources/images/multiplayer/clan_demote.png" />
    <BitmapImage x:Key="clan_transfer" UriSource="/resources/images/multiplayer/clan_transfer.png" />

    <BitmapImage x:Key="timer_icon" UriSource="/resources/images/mpgamelist/timer_icon.png" />
    <BitmapImage x:Key="lang_icon" UriSource="/resources/images/mpgamelist/lang_icon.png" />
    <BitmapImage x:Key="star_icon" UriSource="/resources/images/icons/ranking/star_icon.png" />

    <BitmapImage x:Key="warning_icon" UriSource="/resources/warning.png" />

    <!--Decks-->
    <BitmapImage x:Key="decks_cards" UriSource="/resources/skirmish_cards_white.png" />
    <BitmapImage x:Key="decks_copy" UriSource="/resources/skirmish_copy_white.png" />
    <BitmapImage x:Key="deck_hud_resize" UriSource="/resources/skirmish_resize_deck_hud.png" />

    <!--Defining Action Board resources-->
    <ImageBrush x:Key="actionboard_mainbg" ImageSource="/resources/images/hud/actionboard_mainbg.png" Stretch="Uniform" />

    <!--Defining Skirmish Setup resources-->
    <ImageBrush x:Key="skirmish_setup_bg" ImageSource="/resources/images/skirmishsetup/skirmish_setup_bg.png" Stretch="Uniform" />

    <ImageBrush x:Key="skirmish_setup_teamcolour" ImageSource="/resources/images/skirmishsetup/skirmish_setup_teamcolour.png" Stretch="Uniform" />
    <BitmapImage x:Key="icon_kick" UriSource="/resources/images/skirmishsetup/icon_kick.png" />
    <BitmapImage x:Key="icon_unmute" UriSource="/resources/images/skirmishsetup/icon_unmute.png" />
    <BitmapImage x:Key="icon_mute" UriSource="/resources/images/skirmishsetup/icon_mute.png" />
    <BitmapImage x:Key="icon_tick" UriSource="/resources/tick_icon.png" />
    <BitmapImage x:Key="icon_ready" UriSource="/resources/ready_icon.png" />

    <!--Ping (latency)-->
    <ImageBrush x:Key="ping_green" ImageSource="/resources/ping_green.png" Stretch="Uniform" />
    <ImageBrush x:Key="ping_orange" ImageSource="/resources/ping_orange.png" Stretch="Uniform" />
    <ImageBrush x:Key="ping_red" ImageSource="/resources/ping_red.png" Stretch="Uniform" />

    <!--Flags-->
    <ImageBrush x:Key="flag_square_random" ImageSource="/resources/images/icons/flags/Flags_Square_Random.png" Stretch="Uniform" />

    <ImageBrush x:Key="flag_thin_random" ImageSource="/resources/images/icons/flags/postgame_flag_british.png" Stretch="Uniform" />

    <BitmapImage x:Key="postgame_flag_bg" UriSource="/resources/images/icons/post_game/postgame_flag_bg.png" />
    <BitmapImage x:Key="postgame_flag_bg_deco" UriSource="/resources/images/icons/post_game/postgame_flag_bg_deco.png" />
    <BitmapImage x:Key="postgame_flag_argentinian" UriSource="/resources/images/icons/flags/postgame_flag_argentinian.png" />
    <BitmapImage x:Key="postgame_flag_aztec" UriSource="/resources/images/icons/flags/postgame_flag_aztec.png" />
    <BitmapImage x:Key="postgame_flag_brazilian" UriSource="/resources/images/icons/flags/postgame_flag_brazilian.png" />
    <BitmapImage x:Key="postgame_flag_british" UriSource="/resources/images/icons/flags/postgame_flag_british.png" />
    <BitmapImage x:Key="postgame_flag_chilean" UriSource="/resources/images/icons/flags/postgame_flag_chilean.png" />
    <BitmapImage x:Key="postgame_flag_chinese" UriSource="/resources/images/icons/flags/postgame_flag_chinese.png" />
    <BitmapImage x:Key="postgame_flag_colombian" UriSource="/resources/images/icons/flags/postgame_flag_colombian.png" />
    <BitmapImage x:Key="postgame_flag_dutch" UriSource="/resources/images/icons/flags/postgame_flag_dutch.png" />
    <BitmapImage x:Key="postgame_flag_eastindiatradingcompany" UriSource="/resources/images/icons/flags/postgame_flag_eastindiatradingcompany.png" />
    <BitmapImage x:Key="postgame_flag_french" UriSource="/resources/images/icons/flags/postgame_flag_french.png" />
    <BitmapImage x:Key="postgame_flag_german" UriSource="/resources/images/icons/flags/postgame_flag_german.png" />
    <BitmapImage x:Key="postgame_flag_haitian" UriSource="/resources/images/icons/flags/postgame_flag_haitian.png" />
    <BitmapImage x:Key="postgame_flag_indian" UriSource="/resources/images/icons/flags/postgame_flag_indian.png" />
    <BitmapImage x:Key="postgame_flag_iroquois" UriSource="/resources/images/icons/flags/postgame_flag_iroquois.png" />
    <BitmapImage x:Key="postgame_flag_japanese" UriSource="/resources/images/icons/flags/postgame_flag_japanese.png" />
    <BitmapImage x:Key="postgame_flag_mexican" UriSource="/resources/images/icons/flags/postgame_flag_mexican.png" />
    <BitmapImage x:Key="postgame_flag_ottoman" UriSource="/resources/images/icons/flags/postgame_flag_ottoman.png" />
    <BitmapImage x:Key="postgame_flag_peruvian" UriSource="/resources/images/icons/flags/postgame_flag_peruvian.png" />
    <BitmapImage x:Key="postgame_flag_portuguese" UriSource="/resources/images/icons/flags/postgame_flag_portuguese.png" />
    <BitmapImage x:Key="postgame_flag_random" UriSource="/resources/images/icons/flags/postgame_flag_random.png" />
    <BitmapImage x:Key="postgame_flag_russian" UriSource="/resources/images/icons/flags/postgame_flag_russian.png" />
    <BitmapImage x:Key="postgame_flag_sioux" UriSource="/resources/images/icons/flags/postgame_flag_sioux.png" />
    <BitmapImage x:Key="postgame_flag_spanish" UriSource="/resources/images/icons/flags/postgame_flag_spanish.png" />
    <BitmapImage x:Key="postgame_flag_usa" UriSource="/resources/images/icons/flags/postgame_flag_usa.png" />


    <!--Scenario Editor-->
    <ImageBrush x:Key="cameratrack_play_normal" ImageSource="/resources/images/scenarioeditor/cameratrack_play_normal.png" />
    <ImageBrush x:Key="cameratrack_play_hover" ImageSource="/resources/images/scenarioeditor/cameratrack_play_hover.png" />
    <ImageBrush x:Key="cameratrack_stop_normal" ImageSource="/resources/images/scenarioeditor/cameratrack_stop_normal.png" />
    <ImageBrush x:Key="cameratrack_stop_hover" ImageSource="/resources/images/scenarioeditor/cameratrack_stop_hover.png" />
    <ImageBrush x:Key="cameratrack_pause_normal" ImageSource="/resources/images/scenarioeditor/cameratrack_pause_normal.png" />
    <ImageBrush x:Key="cameratrack_pause_hover" ImageSource="/resources/images/scenarioeditor/cameratrack_pause_hover.png" />
    <ImageBrush x:Key="cameratrack_fwd_normal" ImageSource="/resources/images/scenarioeditor/cameratrack_fwd_normal.png" />
    <ImageBrush x:Key="cameratrack_fwd_hover" ImageSource="/resources/images/scenarioeditor/cameratrack_fwd_hover.png" />
    <ImageBrush x:Key="cameratrack_back_normal" ImageSource="/resources/images/scenarioeditor/cameratrack_back_normal.png" />
    <ImageBrush x:Key="cameratrack_back_hover" ImageSource="/resources/images/scenarioeditor/cameratrack_back_hover.png" />


    <!--Tech Tree-->
    <BitmapImage x:Key="AgeI" UriSource="/resources/images/techtree/AgeI.png" />
    <BitmapImage x:Key="AgeII" UriSource="/resources/images/techtree/AgeII.png" />
    <BitmapImage x:Key="AgeIII" UriSource="/resources/images/techtree/AgeIII.png" />
    <BitmapImage x:Key="AgeIV" UriSource="/resources/images/techtree/AgeIV.png" />
    <BitmapImage x:Key="AgeV" UriSource="/resources/images/techtree/AgeV.png" />
    <BitmapImage x:Key="techbanner_buildings" UriSource="/resources/images/techtree/techbanner_buildings.png" />
    <BitmapImage x:Key="techbanner_improvements" UriSource="/resources/images/techtree/techbanner_improvements.png" />
    <BitmapImage x:Key="techbanner_units" UriSource="/resources/images/techtree/techbanner_units.png" />
    <BitmapImage x:Key="techbanner_dances" UriSource="/resources/images/techtree/techbanner_dances.png" />
    <BitmapImage x:Key="techbanner_allies" UriSource="/resources/images/techtree/techbanner_allies.png" />
    <BitmapImage x:Key="techbanner_shipments" UriSource="/resources/images/techtree/techbanner_shipments.png" />
    <BitmapImage x:Key="techbanner_armies" UriSource="/resources/images/techtree/techbanner_armies.png" />
    <ImageBrush x:Key="techtree_legend_bg" ImageSource="/resources/images/techtree/legend_gradient.png" />

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#AAA" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <ImageBrush x:Key="Slider_Button" ImageSource="/resources/slider_button.png" Stretch="Fill" />
    <ImageBrush x:Key="Slider_Button_hover" ImageSource="/resources/slider_button_hover.png" Stretch="Fill" />
    <ImageBrush x:Key="Slider_Button_disabled" ImageSource="/resources/slider_button_disabled.png" Stretch="Fill" />

    <ImageBrush x:Key="Textbox_BG" ImageSource="/resources/textbox_bg.png" Stretch="Fill" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <LinearGradientBrush x:Key="GlassHighlight" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Pad">
        <GradientStop Color="#00FFFFFF" Offset="0" />
        <GradientStop Color="#88FFFFFF" Offset="0.11" />
        <GradientStop Color="#002D4FD1" Offset="0.99" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GlassLowlight" EndPoint="0.5,1.0" StartPoint="0.5,0.0">
        <GradientStop Color="#00000000" Offset="0" />
        <GradientStop Color="#88000000" Offset="0.7" />
        <GradientStop Color="#33000000" Offset="1.0" />
    </LinearGradientBrush>

    <!--Defining Text colours-->
    <LinearGradientBrush x:Key="ButtonTextGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#ffea9e" Offset="0" />
        <GradientStop Color="#e8c760" Offset="1" />
        <GradientStop Color="#cda440" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradient2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#cbb77c" Offset="0" />
        <GradientStop Color="#b69a50" Offset="1" />
        <GradientStop Color="#a4843c" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradient3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FF9E9E9E" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradient4" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFF1BF" Offset="0" />
        <GradientStop Color="#ffea9e" Offset="1" />
        <GradientStop Color="#e8c760" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradientOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#fff5d2" Offset="0" />
        <GradientStop Color="#f3dd9a" Offset="1" />
        <GradientStop Color="#ebc15c" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradientDisabled" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#ffffff" Offset="0" />
        <GradientStop Color="#b2b2b2" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TitleGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#ffea9e" Offset="0" />
        <GradientStop Color="#cda440" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SubtitleGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#AE8E50" Offset="0" />
        <GradientStop Color="#9D782D" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CinematicTitleGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#ffffff" Offset="0" />
        <GradientStop Color="#b9b9b9" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="OverlayTitleGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#efd365" Offset="0" />
        <GradientStop Color="#f3e3a6" Offset="0.5" />
        <GradientStop Color="#b69721" Offset="1" />
    </LinearGradientBrush>

    <!--Main Panel Gradients-->
    <LinearGradientBrush x:Key="PanelBGStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#b8a444" Offset="0" />
        <GradientStop Color="#f7e79a" Offset="0.35" />
        <GradientStop Color="#fff8d9" Offset="0.5" />
        <GradientStop Color="#f7e79a" Offset="0.65" />
        <GradientStop Color="#b8a444" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PanelBGStrokeGradientVertical" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#b8a444" Offset="0" />
        <GradientStop Color="#f7e79a" Offset="0.35" />
        <GradientStop Color="#fff8d9" Offset="0.5" />
        <GradientStop Color="#f7e79a" Offset="0.65" />
        <GradientStop Color="#b8a444" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DividingLineGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#00f0ae2d" Offset="0" />
        <GradientStop Color="#f6d37c" Offset="0.25" />
        <GradientStop Color="#f6d37c" Offset="0.75" />
        <GradientStop Color="#00f0ae2d" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DividingLineGradient_Vertical" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Color="#00f0ae2d" Offset="0" />
        <GradientStop Color="#f6d37c" Offset="0.10" />
        <GradientStop Color="#f6d37c" Offset="0.90" />
        <GradientStop Color="#00f0ae2d" Offset="1" />
    </LinearGradientBrush>

    <!--Combobox Gradients-->
    <LinearGradientBrush x:Key="ComboBoxStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#4f4731" Offset="0" />
        <GradientStop Color="#b79f66" Offset="0.5" />
        <GradientStop Color="#4f4731" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#776a45" Offset="0" />
        <GradientStop Color="#d3b367" Offset="0.5" />
        <GradientStop Color="#776a45" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#5b5b5b" Offset="0" />
        <GradientStop Color="#c0c0c0" Offset="0.5" />
        <GradientStop Color="#5b5b5b" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientSelected" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#9f894d" Offset="0" />
        <GradientStop Color="#f2cb6d" Offset="0.5" />
        <GradientStop Color="#9f894d" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#382817" Offset="0" />
        <GradientStop Color="#251504" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradientOver" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#503921" Offset="0" />
        <GradientStop Color="#351e06" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradientDisabled" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF271C10" Offset="0" />
        <GradientStop Color="#251504" Offset="1" />
    </LinearGradientBrush>

    <!--TextBox Gradients-->
    <LinearGradientBrush x:Key="TextboxStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#504c41" Offset="0" />
        <GradientStop Color="#afa898" Offset="0.5" />
        <GradientStop Color="#504c41" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextboxInnerGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#000000" Offset="0" />
        <GradientStop Color="#000000" Offset="1" />
    </LinearGradientBrush>

    <!--ListView Item Gradients-->
    <LinearGradientBrush x:Key="ListViewItemGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#332613" Offset="0" />
        <GradientStop Color="#251b0d" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListViewItemGradientOver" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#5b4627" Offset="0" />
        <GradientStop Color="#3e3019" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ListViewItemGradientSelected" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#81643a" Offset="0" />
        <GradientStop Color="#684710" Offset="1" />
    </LinearGradientBrush>

    <!--Semi-Transparent ListView Item Gradients-->
    <LinearGradientBrush x:Key="ListViewItemGradient2" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#80000000" Offset="0" />
        <GradientStop Color="#80000000" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="FGProgressionGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#215e13" Offset="0" />
        <GradientStop Color="#3c9a26" Offset="1" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="Spinner">
        <Grid>
            <Rectangle Width="100" Height="100" RenderTransformOrigin="0.5,0.5">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/loadingspinner.png" />
                </Rectangle.Fill>
                <Rectangle.RenderTransform>
                    <RotateTransform />
                </Rectangle.RenderTransform>
                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <Style TargetType="Rectangle" x:Key="RayRect">
        <Setter Property="Height" Value="800" />
        <Setter Property="Width" Value="800" />
        <Setter Property="Margin" Value="0,50" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="0" />
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate TargetType="ContentControl" x:Key="EndGamePanel_Ray">
        <Grid Width="800" Height="800">
            <Rectangle x:Name="Ray" Style="{StaticResource RayRect}">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/images/endgame/skirmish_victory_rays.png"  />
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle x:Name="Ray2" Style="{StaticResource RayRect}" Opacity="0.5">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/images/endgame/skirmish_victory_rays.png"  />
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Ray" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" BeginTime="0:0:0" To="360" Duration="00:00:25.000" RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="Ray2" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" BeginTime="0:0:0" To="-360" Duration="00:00:40.000" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Rectangle}" x:Key="PanelBGSection">
        <Setter Property="Fill" Value="#800e0b0b" />
        <Setter Property="Opacity" Value="0.65" />
        <Setter Property="RadiusX" Value="5" />
        <Setter Property="RadiusY" Value="5" />
        <Setter Property="Stroke" Value="#8049381f" />
        <Setter Property="StrokeThickness" Value="4" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="PanelBGSectionAsBorder">
        <Setter Property="Background" Value="#800e0b0b" />
        <Setter Property="Opacity" Value="0.65" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderBrush" Value="#8049381f" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Rectangle}" x:Key="PanelFGProgression">
        <Setter Property="Fill" Value="{StaticResource FGProgressionGradient}" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Stroke" Value="Transparent" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CampaignTitleTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SubMenuBackButton">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="600" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="container" Height="45" Width="600" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0">
                        <Rectangle Fill="Transparent"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Grid Height="27" Width="27">
                                <Image Name="backbutton" Height="27" Source="/resources/button_back_normal.png" Stretch="Uniform" />
                                <Image Name="backbuttonhover" Height="27" Source="/resources/button_back_hover.png" Stretch="Uniform" Opacity="0" />
                            </Grid>

                            <Rectangle Name="divider" Width="2" Height="25" Margin="5,0,0,0" Fill="#e7c169" Opacity="0.5" />

                            <TextBlock Name="backtext" FontSize="25" FontFamily="Trajan Pro" FontWeight="Bold" Height="auto" VerticalAlignment="Center" Margin="10,3,0,0" Text="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="#edcc63" x:Name="ButtonTextBrush" />
                                </TextBlock.Foreground>
                                <TextBlock.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsFocusedStoryBoard"/>
                                <StopStoryboard BeginStoryboardName="IsFocusedStoryBoard2"/>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#FFFFF8E0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsFocusedStoryBoard"/>
                                <StopStoryboard BeginStoryboardName="IsFocusedStoryBoard2"/>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#edcc63" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsFocusedStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#FFFFF8E0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="IsFocusedStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#edcc63" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>


                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/backbutton.wav" />
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Used for Campaign Home City-->
    <Style TargetType="Button" x:Key="CampaignHCButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="600" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="Margin" Value="0,0,10,0"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="35" Width="600" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Name="backtext" FontSize="25" FontFamily="Trajan Pro" TextAlignment="Right" FontWeight="Bold" Height="30" VerticalAlignment="Center" Margin="10,7,10,0" Text="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="#edcc63" x:Name="ButtonTextBrush" />
                                </TextBlock.Foreground>
                                <TextBlock.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TextBlock.RenderTransform>
                            </TextBlock>

                            <Rectangle Name="divider" Width="2" Height="25" Margin="5,0,5,0" Fill="#e7c169" Opacity="0.5" />

                            <Grid Height="27" Width="27" Margin="0,0,10,0">
                                <Image Name="backbutton" Height="27" Source="/resources/button_homecity_normal.png" Stretch="Uniform" />
                                <Image Name="backbuttonhover" Height="27" Source="/resources/button_homecity_hover.png" Stretch="Uniform" Opacity="0" />
                                <Image Name="backbuttondisabled" Height="27" Source="/resources/button_homecity_disabled.png" Stretch="Uniform" Opacity="0" />
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#FFFFF8E0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#edcc63" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#FFFFF8E0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="divider" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <ColorAnimation Storyboard.TargetName="ButtonTextBrush" Storyboard.TargetProperty="Color" To="#edcc63" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetName="backtext" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="divider" Property="Rectangle.Fill" Value="Gray"/>
                            <Setter TargetName="backtext" Property="TextBlock.Foreground" Value="Gray"/>
                            <Setter TargetName="backbuttondisabled" Property="Image.Opacity" Value="1"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="MainTitleTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="{StaticResource TitleGradient}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="SubTitleTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="{StaticResource SubtitleGradient}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="RegularTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="RegularTextBlockStyleFormal">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CampaignRegularTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="LoadScreenTextBlockStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="MainMenuHeaders">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="29" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--Defining Page Titles properties-->
    <Style TargetType="TextBlock" x:Key="PageTitleStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Confirmation, Titles-->
    <Style TargetType="TextBlock" x:Key="ConfirmationTitlesStyle">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="Black" Direction="-90" ShadowDepth="4" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource ConfirmationTitlesStyle}" x:Key="ConfirmationTitlesStyleSmall">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="2" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--File Manager, List Manager-->
    <Style TargetType="{x:Type ListView}" x:Key="FileManagerListBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />

        <Setter Property="Padding" Value="-1" />

        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
        </Style.Resources>
    </Style>

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />


    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="0.1" />
                <GradientStop Color="#EEE" Offset="0.9" />
                <GradientStop Color="#FFF" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScrollbarGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#a08116" Offset="0.0" />
                <GradientStop Color="#f4e09b" Offset="0.5" />
                <GradientStop Color="#a08116" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>



    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Width="8" Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="CornerScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="13,3" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="5" Background="Black" Width="16" Margin="10,0,0,0" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource ScrollbarGradient}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="0" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition MaxWidth="0" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="5" Background="Black" Height="16" Margin="10,0" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" Margin="0,1,0,1" Background="{StaticResource ScrollbarGradient}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--File Manager, File Sub Info-->
    <Style TargetType="TextBlock" x:Key="subInfoLeft">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--File Manager, Dividing Line-->
    <Style TargetType="Rectangle" x:Key="filemanager_dividingline">
        <Setter Property="Width" Value="630" />
        <Setter Property="Height" Value="2" />
        <Setter Property="Fill" Value="#b9b4a5" />
        <Setter Property="OpacityMask" Value="{StaticResource square_2px}" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Grid Width="40" Height="40">
                            <Ellipse x:Name="Border" Fill="{StaticResource Checkbox_Off}" StrokeThickness="0" Stroke="{StaticResource NormalBorderBrush}" />
                            <Ellipse x:Name="CheckMark" Margin="0" Fill="{StaticResource Checkbox_On}" />
                        </Grid>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource Checkbox_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource Checkbox_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource Checkbox_Hover}" />
                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource Checkbox_Disabled_Off}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource Checkbox_Disabled_On}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Width="35" Height="35" HorizontalAlignment="Left" Margin="2,0,0,0" Background="{StaticResource Checkbox_Focused}">
                        <!--
                        <Ellipse Margin="0,0,4,0" Width="30" Height="30" StrokeThickness="3" Opacity="0.5" Stroke="Yellow" />
                        -->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="Checkbox_Small">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Border x:Name="Border" Width="30" Height="30" CornerRadius="0" Background="{StaticResource Checkbox_Off}" BorderThickness="1" BorderBrush="Transparent">
                            <Path Width="0" Height="0" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="Transparent" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On_Hover}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Hover}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Off}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_Off}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_On}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="Checkbox_Medium">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Border x:Name="Border" Width="40" Height="40" CornerRadius="0" Background="{StaticResource Checkbox_Off}" BorderThickness="2" BorderBrush="Transparent">
                            <Path Width="0" Height="0" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="Transparent" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>

                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Off}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_Off}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_On}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFocusVisual_Options">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--This actually appears incorrect in WPFG project but DOES appears correct in game....idk why :'(-->
                    <Border Width="35" Height="35" HorizontalAlignment="Right" Margin="0,0,2,0" Background="{StaticResource Checkbox_Focused}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="Checkbox_Options">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual_Options}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Border x:Name="Border" Width="40" Height="40" CornerRadius="0" Background="{StaticResource Checkbox_Off}" BorderThickness="2" BorderBrush="Transparent">
                            <Path Width="0" Height="0" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="Transparent" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>

                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On}" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="false">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Off}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_Off}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Disabled_On}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="PreviewMouseDown">
                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Name="Ellipse" Fill="{StaticResource Slider_Button}" Stroke="Transparent" StrokeThickness="0" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Slider_Button_hover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Slider_Button_disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="PreviewMouseDown">
                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#7d5f3a" Offset="0.0" />
                <GradientStop Color="#7d5f3a" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Name="TrackBackground" Margin="0" CornerRadius="2" Height="4" Grid.Row="1" Background="{StaticResource HorizontalLightBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" BorderThickness="1" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsFocused" Value="True">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Name="TrackBackground" Margin="0" CornerRadius="2" Width="4" Grid.Column="1" Background="{StaticResource HorizontalLightBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" BorderThickness="1" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsFocused" Value="True">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" Background="{StaticResource ComboBoxInnerGradient}" BorderBrush="{StaticResource ComboBoxStrokeGradient}" BorderThickness="2" />
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="#b49d64" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Visibility="Hidden" />
            <Image x:Name="ArrowImage" Grid.Column="1" Height="25" Width="25" Margin="-20,0,0,0" Source="{StaticResource combo_arrow}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientDisabled}" />
                <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource ComboBoxStrokeGradientDisabled}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ArrowImage" Property="Image.Source" Value="{StaticResource combo_arrow_disabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButtonOver" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" Background="{StaticResource ComboBoxInnerGradientOver}" BorderBrush="{StaticResource ComboBoxStrokeGradient}" BorderThickness="2" />
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="#b49d64" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Visibility="Hidden" />
            <Image Grid.Column="1" Height="25" Width="25" Margin="-20,0,0,0" Source="{StaticResource combo_arrow}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource hud_chat_combobox}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="OptionsCombobox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" local:Age3Accessibility.AccessibilityControlSkip="true">
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,5,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,125,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#DF000000" BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="ToggleButton" Property="Template" Value="{StaticResource ComboBoxToggleButtonOver}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                        <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ToggleButton-->
    <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Rectangle RadiusX="3.0" RadiusY="3.0" Stretch="Fill" x:Name="Rectangle1">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Shape}">
                                    <Setter Property="Fill" Value="#FFFF9C00" />
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4, 1, 4, 1" />

                        <Rectangle RadiusX="3.0" RadiusY="3.0" x:Name="RectangleHighlight" Fill="{DynamicResource GlassHighlight}" />


                        <Rectangle RadiusX="3.0" RadiusY="3.0" x:Name="RectangleLowLight" Fill="{StaticResource GlassLowlight}">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="RectangleHighlight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RectangleLowLight" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="RectangleHighlight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RectangleLowLight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="#FF774400" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Recorded_Slow_Toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Rectangle Stretch="Fill" x:Name="Rectangle1">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Shape}">
                                    <Setter Property="Fill" Value="{StaticResource recorded_slow}" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4, 1, 4, 1" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">

                            <Setter TargetName="Rectangle1" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="1" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_slow}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="0.5" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_slow_over}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="1" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_slow_over}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Recorded_Med_Toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Rectangle Stretch="Fill" x:Name="Rectangle1">
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Shape}">
                                    <Setter Property="Fill" Value="{StaticResource recorded_med}" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4, 1, 4, 1" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">

                            <Setter TargetName="Rectangle1" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="1" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_med}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="0.5" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_med_over}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Rectangle1" Property="Opacity" Value="1" />
                            <Setter TargetName="Rectangle1" Property="Fill" Value="{StaticResource recorded_med_over}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Defining TextBox-->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--
        <Setter Property="MinWidth" Value="120"/>
        -->
        <Setter Property="Height" Value="35" />
        <Setter Property="AllowDrop" Value="true" />

        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" CornerRadius="4" Padding="6,4,0,0" Background="{StaticResource TextboxInnerGradient}" BorderBrush="{StaticResource TextboxStrokeGradient}" BorderThickness="2">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ProgressBarGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#7bf7ff" Offset="0" />
        <GradientStop Color="#13c0cb" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressAgeBarGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#FF6AB44D" Offset="0" />
        <GradientStop Color="#FF156408" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#b59e3c" Offset="0" />
        <GradientStop Color="#f6ebaa" Offset="0.5" />
        <GradientStop Color="#b59e3c" Offset="1" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="ProgressGlow">
        <Grid>
            <Rectangle Width="100" Height="100" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/progressbar_glow.png" />
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <!--Defining ProgressBar-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14" MinWidth="200">
                        <Border Height="28" CornerRadius="5" Background="#23201b" BorderBrush="Black" BorderThickness="3" Margin="2,2,0,0" Opacity="0.5" />
                        <Border x:Name="PART_Track" Height="28" CornerRadius="4" Background="#23201b" BorderBrush="{StaticResource ProgressBarStrokeGradient}" BorderThickness="3" Margin="2" />

                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Rectangle Grid.Column="0" Height="17" VerticalAlignment="Center" Fill="{StaticResource ProgressBarGradient}" RadiusX="2" RadiusY="2" Margin="7,1,5,0" />
                                <!--<ContentControl Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,-45,0" Template="{StaticResource ProgressGlow}" />-->
                            </Grid>
                        </Decorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressBar_Mini" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14" MinWidth="200">
                        <Border x:Name="PART_Track" CornerRadius="4" Background="#23201b" BorderBrush="{StaticResource ProgressBarStrokeGradient}" BorderThickness="2" />
                        <Border x:Name="PART_Indicator" CornerRadius="3" Background="{StaticResource ProgressBarGradient}" BorderBrush="#23201b" BorderThickness="0" HorizontalAlignment="Left" Margin="4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ScrollViewer-->
    <Style x:Key="{x:Type ScrollViewer}" TargetType="ScrollViewer">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>


                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" ClipToBounds="true" Grid.Row="0" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Row="0" Grid.Column="1" Width="20.0" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />


                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Height="20.0" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining LeftScrollViewer-->
    <Style x:Key="LeftScrollViewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" ClipToBounds="true" Grid.Row="0" Grid.Column="1" Content="{TemplateBinding Content}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Row="0" Grid.Column="0" Width="20.0" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Height="20.0" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ListBoxItem-->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Age3FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="2" Background="Transparent" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining GridView.GridViewScrollViewerStyleKey-->
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0" Columns="{Binding Path=TemplatedParent.View.Columns,                             RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding                                Path=TemplatedParent.View.ColumnHeaderContainerStyle,                                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding                                Path=TemplatedParent.View.ColumnHeaderTemplate,                                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding                                 Path=TemplatedParent.View.ColumnHeaderTemplateSelector,                                RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding                                Path=TemplatedParent.View.AllowsColumnReorder,                                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding                                Path=TemplatedParent.View.ColumnHeaderContextMenu,                                RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding                                Path=TemplatedParent.View.ColumnHeaderToolTip,                                RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>

                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{TemplateBinding HorizontalOffset}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining GridViewColumnHeaderGripper-->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ListViewItem-->
    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="Black" Duration="00:00:00.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="White" Duration="00:00:00.3" FillBehavior="Stop" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Rectangle x:Name="RectBackground" Fill="Transparent" />
                        <GridViewRowPresenter x:Name="Presenter" Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}">
                            <GridViewRowPresenter.Style>
                                <Style TargetType="{x:Type GridViewRowPresenter}">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GridViewRowPresenter.Style>
                        </GridViewRowPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="RectBackground" Storyboard.TargetProperty="Fill.Color" To="Orange" Duration="00:00:00.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="RectBackground" Storyboard.TargetProperty="Fill.Color" To="Transparent" Duration="00:00:00.05" FillBehavior="Stop" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ListView-->
    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}" >
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining ExpandCollapseToggleStyle-->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded,                                 RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Name="Border" CornerRadius="2,0,0,0" Background="Transparent" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="0,0,1,0">
            <Path Name="Arrow" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Border Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" Height="22">
                    <ContentPresenter.Resources>
                        <DataTemplate DataType="{x:Type BitmapImage}">
                            <Image Source="{Binding}" />
                        </DataTemplate>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Border Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                    <Path Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right" />
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}" />
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BackButtonLarge">
        <Setter Property="Background" Value="{StaticResource button_back_large_normal}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{StaticResource button_back_large_normal}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="resources/button_back_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="resources/button_back_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.75" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.75" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/button_back_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/button_back_large_disabled.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ForwardButtonLarge">
        <Setter Property="Background" Value="{StaticResource button_forward_large_normal}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{StaticResource button_forward_large_normal}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="resources/button_forward_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="resources/button_forward_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.75" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.75" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="resources/button_forward_large_hover.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/button_forward_large_disabled.png" Stretch="Uniform" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CampaignSelectCard">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="720" />
        <Setter Property="Width" Value="405" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="720" Width="405">
                        <Image x:Name="glow" Height="720" Width="405" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="/resources/images/campaignmenu/campaignselect_glow.png" Opacity="0" />
                        <Image x:Name="glow2" Height="720" Width="405" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="/resources/images/campaignmenu/campaignselect_glow.png" Opacity="0" />

                        <Grid x:Name="card" Height="675" Width="375" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Background="{TemplateBinding Background}" Opacity="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="70"/>
                            </Grid.RowDefinitions>

                            <Grid.OpacityMask>
                                <ImageBrush ImageSource="/resources/images/campaignmenu/campaignselect_mask.png" />
                            </Grid.OpacityMask>

                            <Image x:Name="highlight" Grid.Row="0" Grid.RowSpan="2" Height="675" Width="375" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="/resources/images/campaignmenu/campaignselect_highlight.png" Opacity="0" />

                            <Image x:Name="textbg" Grid.Row="1" Height="70" Width="405" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,0" Source="/resources/images/campaignmenu/campaignselect_textbg.png" />

                            <TextBlock x:Name="title" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="25" FontWeight="Bold" Foreground="{StaticResource ButtonTextGradient}" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Content}">
                                <TextBlock.Effect>
                                    <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
                                </TextBlock.Effect>
                            </TextBlock>

                            <Image x:Name="campaignDisabled" Grid.Row="0" Grid.RowSpan="2" Height="675" Width="375" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="/resources/images/campaignmenu/campaignselect_mask.png" Opacity="0"/>
                        </Grid>

                        <TextBlock x:Name="progression" HorizontalAlignment="Right" TextAlignment="Right" VerticalAlignment="Top" FontSize="35" FontWeight="Bold" Foreground="{StaticResource ButtonTextGradient2}" Margin="0,45,35,0" Text="{Binding Progress}">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_campaign.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="KeyboardFocusEnter">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_01.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="KeyboardFocusExit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="campaignDisabled" Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="27" HorizontalAlignment="Center" VerticalAlignment="Bottom" Foreground="{StaticResource ButtonTextGradient}" Margin="0,0,0,40" Text="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
                        </TextBlock.Effect>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="CampaignListItem">
        <Setter Property="Width" Value="560" />
        <Setter Property="Height" Value="130" />
        <Setter Property="Margin" Value="0,-5,0,0" />
        <Setter Property="Background" Value="{StaticResource campaignlevel_shadow}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="container" Width="560" Height="130">
                        <Grid x:Name="cardgrid" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>
                            <Grid>
                                <Image x:Name="shadow" Source="/resources/images/campaignmenu/levels/lvlcard_shadow.png" Opacity="1" />
                                <Image x:Name="glow" Source="/resources/images/campaignmenu/levels/lvlcard_glow.png" Opacity="0" />
                                <Image x:Name="glow2" Source="/resources/images/campaignmenu/levels/lvlcard_glow.png" Opacity="0" />
                                <Grid Margin="0,0,0,0" Opacity="1" Background="Gray">
                                    <Grid.OpacityMask>
                                        <ImageBrush ImageSource="/resources/images/campaignmenu/levels/lvlcard_mask.png" />
                                    </Grid.OpacityMask>
                                    <Image x:Name="image" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="{Binding ImageName}" />
                                    <Image x:Name="titlebg" Height="45" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,0" Source="/resources/images/campaignmenu/levels/titlebg.png" />
                                    <Image x:Name="highlight" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Source="/resources/images/campaignmenu/levels/lvlcard_highlight.png" Opacity="0" />
                                </Grid>
                            </Grid>

                            <Rectangle Width="40" Height="40" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,5,0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="{Binding Type}" />
                                </Rectangle.Fill>
                            </Rectangle>

                            <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="50" Width="50" Margin="12,15,0,0" Source="/resources/images/icons/eso/awards/award_01.png" Visibility="{Binding BronzeUnlocked}"/>
                            <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="50" Width="50" Margin="12,15,0,0" Source="/resources/images/icons/eso/awards/award_02.png" Visibility="{Binding SilverUnlocked}"/>
                            <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="50" Width="50" Margin="12,15,0,0" Source="/resources/images/icons/eso/awards/award_03.png" Visibility="{Binding GoldUnlocked}"/>

                            <TextBlock Text="{Binding Name}" Style="{StaticResource CampaignRegularTextBlockStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,11" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.8" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_01.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="cardgrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetName="highlight" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ButtonStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#a58739" Offset="0" />
        <GradientStop Color="#fee5a4" Offset="0.5" />
        <GradientStop Color="#a58739" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonInnerGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#2a1108" Offset="0" />
        <GradientStop Color="#502211" Offset="0.2" />
        <GradientStop Color="#532312" Offset="0.5" />
        <GradientStop Color="#502211" Offset="0.8" />
        <GradientStop Color="#2a1108" Offset="1" />
    </LinearGradientBrush>

    <!--Defining Main Menu button-->
    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#755f22" Offset="0" />
        <GradientStop Color="#ceb165" Offset="0.25" />
        <GradientStop Color="#ffe6a6" Offset="0.5" />
        <GradientStop Color="#ceb165" Offset="0.25" />
        <GradientStop Color="#755f22" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#a48632" Offset="0" />
        <GradientStop Color="#ffd974" Offset="0.25" />
        <GradientStop Color="#fff9e9" Offset="0.5" />
        <GradientStop Color="#ffd974" Offset="0.25" />
        <GradientStop Color="#a48632" Offset="1" />
    </LinearGradientBrush>



    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#5b5b5b" Offset="0" />
        <GradientStop Color="#c0c0c0" Offset="0.25" />
        <GradientStop Color="#f9f9f9" Offset="0.5" />
        <GradientStop Color="#c0c0c0" Offset="0.25" />
        <GradientStop Color="#5b5b5b" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#170803" Offset="0" />
        <GradientStop Color="#3b190d" Offset="0.15" />
        <GradientStop Color="#532412" Offset="0.40" />
        <GradientStop Color="#532412" Offset="0.60" />
        <GradientStop Color="#3b190d" Offset="0.85" />
        <GradientStop Color="#170803" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#2e0f05" Offset="0" />
        <GradientStop Color="#511f0d" Offset="0.15" />
        <GradientStop Color="#75351c" Offset="0.40" />
        <GradientStop Color="#75351c" Offset="0.60" />
        <GradientStop Color="#511f0d" Offset="0.85" />
        <GradientStop Color="#2e0f05" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientPress" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#3e1001" Offset="0" />
        <GradientStop Color="#661e05" Offset="0.15" />
        <GradientStop Color="#a73e16" Offset="0.40" />
        <GradientStop Color="#a73e16" Offset="0.60" />
        <GradientStop Color="#661e05" Offset="0.85" />
        <GradientStop Color="#3e1001" Offset="1" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientPressGreen" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#FF013E04" Offset="0" />
        <GradientStop Color="#FF0E6605" Offset="0.15" />
        <GradientStop Color="#FF0D6812" Offset="0.40" />
        <GradientStop Color="#FF0D6812" Offset="0.60" />
        <GradientStop Color="#FF0E6605" Offset="0.85" />
        <GradientStop Color="#FF013E04" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#141414" Offset="0" />
        <GradientStop Color="#393939" Offset="0.15" />
        <GradientStop Color="#535353" Offset="0.40" />
        <GradientStop Color="#535353" Offset="0.60" />
        <GradientStop Color="#393939" Offset="0.85" />
        <GradientStop Color="#141414" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SubButtonInnerGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#503f23" Offset="0" />
        <GradientStop Color="#755c33" Offset="0.5" />
        <GradientStop Color="#503f23" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SubButtonInnerGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#503f23" Offset="0" />
        <GradientStop Color="#755c33" Offset="0.5" />
        <GradientStop Color="#503f23" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="StatsToggleBorderGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#895923" Offset="0" />
        <GradientStop Color="#53330e" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="MainMenuButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Name="focusborder" Height="40" Width="auto" MinWidth="100">
                        <Grid Name="buttoncontainer" RenderTransformOrigin="0.5, 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="2"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>

                            <Rectangle Name="strokeblack" Grid.ColumnSpan="3" Height="40" Fill="Transparent" StrokeThickness="4" Stroke="Black" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegold" Grid.Column="1" Height="38" Fill="Transparent" StrokeThickness="2" Stroke="Red" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegoldover" Grid.Column="1" Height="38" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource MainMenuButtonStrokeGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- a copy of MainMenuButton which supports correct use of data templates -->
    <Style TargetType="{x:Type Button}" x:Key="MainMenuButtonClean">

        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="40" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>

        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource MainMenuButtonFocusVisual}"/>-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Background" Value="{StaticResource ButtonInnerGradient}" />
        <!-- 
        <Setter Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" /> -->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="test" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                        <Grid Name="buttoncontainer" RenderTransformOrigin="0.5, 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>
                            <Rectangle Name="background" Grid.Column="1" Margin="2" Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="highlightover" Grid.Column="1" Margin="2" Fill="{StaticResource MainMenuButtonInnerGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="highlightpress" Grid.Column="1" Margin="2" Fill="{StaticResource MainMenuButtonInnerGradientPress}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="strokeblack" Grid.ColumnSpan="3" Margin="0" Fill="Transparent" StrokeThickness="3" Stroke="Black" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegold" Grid.Column="1" Margin="2" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource ButtonStrokeGradient}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegoldover" Grid.Column="1" Margin="2" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource MainMenuButtonStrokeGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>
                        </Grid>
                        
                        <ContentPresenter Margin="6" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--
                        Having these triggers in this order makes it so that is the order they execute in.
                        When the player clicks on the button for the first time, Button.IsFocused and IsPressed 
                        get executed, but the last one overrides the current animation. So before when IsFocused
                        was after IsPressed, only IsFocused occured visually, and since the final state looks identical
                        to the final state of MouseOver, the end result looked like nothing happened, but subsequent 
                        clicks executed IsPressed because IsFocused was already true, therefore not changing states 
                        and not executing.
                        -->
                        <!--
                        -->
                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard2" />
                                <BeginStoryboard Name="FocusStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="FocusStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsPressedStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard Name="IsPressedStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient3}" />
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource MainMenuButtonInnerGradientDisabled}" />
                            <Setter TargetName="strokegold" Property="Stroke" Value="{StaticResource MainMenuButtonStrokeGradientDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MainMenuButton">

        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="40" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource MainMenuButtonFocusVisual}"/>-->

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!-- TMRESMI: This should be either empty or have something in it, but don't delete it wholesale. -->
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="test" Height="40" Width="auto" MinWidth="100">
                        <Grid Name="buttoncontainer" RenderTransformOrigin="0.5, 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>

                            <Rectangle Name="background" Grid.Column="1" Height="38" Fill="{StaticResource ButtonInnerGradient}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="highlightover" Grid.Column="1" Height="38" Fill="{StaticResource MainMenuButtonInnerGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="highlightpress" Grid.Column="1" Height="38" Fill="{StaticResource MainMenuButtonInnerGradientPress}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="strokeblack" Grid.ColumnSpan="3" Height="40" Fill="Transparent" StrokeThickness="3" Stroke="Black" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegold" Grid.Column="1" Height="38" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource ButtonStrokeGradient}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegoldover" Grid.Column="1" Height="38" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource MainMenuButtonStrokeGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>
                        </Grid>

                        <Viewbox>
                            <TextBlock Name="ButtonText" Grid.Column="1" TextAlignment="Center" MinWidth="{TemplateBinding ActualWidth}" VerticalAlignment="Center" FontSize="18" Foreground="{StaticResource ButtonTextGradient}" Margin="5,5,5,0" Text="{TemplateBinding Content}"/>
                        </Viewbox>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--
                        Having these triggers in this order makes it so that is the order they execute in.
                        When the player clicks on the button for the first time, Button.IsFocused and IsPressed 
                        get executed, but the last one overrides the current animation. So before when IsFocused
                        was after IsPressed, only IsFocused occured visually, and since the final state looks identical
                        to the final state of MouseOver, the end result looked like nothing happened, but subsequent 
                        clicks executed IsPressed because IsFocused was already true, therefore not changing states 
                        and not executing.
                        -->
                        <!--
                        -->
                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard2" />
                                <BeginStoryboard Name="FocusStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="FocusStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsPressedStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard Name="IsPressedStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradient3}" />
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource MainMenuButtonInnerGradientDisabled}" />
                            <Setter TargetName="strokegold" Property="Stroke" Value="{StaticResource MainMenuButtonStrokeGradientDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining Sub Menu button-->
    <Style TargetType="{x:Type Button}" x:Key="SubMenuButton">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type system:String}">
                    <TextBlock FontSize="18" Foreground="{StaticResource ButtonTextGradient}" Margin="0,0,0,-4" Text="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
                        </TextBlock.Effect>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#4f4731" Offset="0.0" />
                                        <GradientStop Color="#b79f66" Offset="0.5" />
                                        <GradientStop Color="#4f4731" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Kick button-->
    <Style TargetType="{x:Type Button}" x:Key="Kickbutton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ComboBoxStrokeGradient}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientSelected}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>



                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#262626" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientDisabled}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Mute Button-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="Mutebutton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ComboBoxStrokeGradient}">
                        <Image x:Name="image" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{StaticResource icon_unmute}"/>
                        <Border.ToolTip>$$45750$$Mute Player</Border.ToolTip>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientSelected}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#262626" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientDisabled}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="{StaticResource icon_mute}"/>
                            <Setter TargetName="border" Property="Border.ToolTip" Value="$$45751$$Unmute Player"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Copy Deck Button-->
    <Style TargetType="{x:Type Button}" x:Key="SmallDeckButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ComboBoxStrokeGradient}" ToolTip="{TemplateBinding ToolTip}">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" />
                            <Image x:Name="tick" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Source="{StaticResource icon_tick}"/>
                        </Grid>

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientSelected}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#262626" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientDisabled}"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Password Sortby button-->
    <Style TargetType="{x:Type Button}" x:Key="Passwordbutton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Name="icon" Source="/resources/lock_icon.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#4f4731" Offset="0.0" />
                                        <GradientStop Color="#b79f66" Offset="0.5" />
                                        <GradientStop Color="#4f4731" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Image Source="/resources/lock_icon_hover.png" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Image Source="/resources/lock_icon_hover.png" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style TargetType="{x:Type Button}" x:Key="cameratrack_play">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource cameratrack_play_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_play_hover.png" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_play_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="cameratrack_stop">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource cameratrack_stop_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_stop_hover.png" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_stop_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="cameratrack_pause">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource cameratrack_pause_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_pause_hover.png" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_pause_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="cameratrack_fwd">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource cameratrack_fwd_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_fwd_hover.png" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_fwd_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="cameratrack_back">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource cameratrack_back_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_back_hover.png" />
                                </Setter.Value>
                            </Setter>

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/resources/images/scenarioeditor/cameratrack_back_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ChatExpandButton">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource hud_chat_expand_normal}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" CornerRadius="0" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource hud_chat_expand_hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource hud_chat_expand_press}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Age3ResourceTimer" x:Key="TimerStyle">
        <Style.Triggers>
            <Trigger Property="DisplayState" Value="NoOverlay">
                <Setter Property="Fill" Value="Transparent"/>
                <Setter Property="Opacity" Value="0.0"/>
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Flashing">
                <Setter Property="Fill" Value="White"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="PassiveAbility">
                <Setter Property="Fill" Value="Transparent"/>
                <Setter Property="Opacity" Value="0.0"/>
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="NotYetAvailable">
                <Setter Property="Fill" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="NotCurrentlyAvailable">
                <Setter Property="Fill" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="AtLimit">
                <Setter Property="Fill" Value="Red"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="CantCurrentlyAfford">
                <Setter Property="Fill" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="FilteredOut">
                <Setter Property="Fill" Value="Gray"/>
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Completion" Value="1.0"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Training">
                <Setter Property="Fill" Value="LightGreen"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="RepeatTraining">
                <Setter Property="Fill" Value="Aquamarine"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Researching">
                <Setter Property="Fill" Value="LightGreen"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Shipping">
                <Setter Property="Fill" Value="Yellow"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="HCButtonShipping">
                <Setter Property="Fill" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Maintaining">
                <Setter Property="Fill" Value="LightBlue"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="Dancing">
                <Setter Property="Fill" Value="Blue"/>
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="CoolingDown">
                <Setter Property="Fill" Value="DarkGray"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DisplayState" Value="StartingResourceDelay">
                <Setter Property="Fill" Value="Magenta"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Completion" Value="{Binding TimerValue}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ImageButton">
        <Setter Property="FontFamily" Value="Trajan Pro"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="background">
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>

                            <Rectangle Fill="Black" RadiusX="3" RadiusY="3"></Rectangle>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="1.5"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0"/>

                            <local:Age3ResourceTimer x:Name="timer" Style ="{StaticResource TimerStyle}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}"/>
                        </Grid>

                        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Rectangle Fill="Black" Opacity="0.5" Margin="3" RadiusX="5" RadiusY="5"/>
                            <TextBlock x:Name="UnitSelection_Text" TextAlignment="Center" FontSize="25" FontWeight="Bold" Margin="7,5,7,0" Foreground="White" Text="{TemplateBinding Content}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ImageButtonUnfocusable" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="background">
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>

                            <Rectangle Fill="Black" RadiusX="3" RadiusY="3"></Rectangle>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="1.5"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0"/>

                            <local:Age3ResourceTimer x:Name="timer" Style ="{StaticResource TimerStyle}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}"/>
                        </Grid>

                        <Grid Name="hotkeyDisplay" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="{Binding HotkeyTextVisibility, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                            <Rectangle Fill="Black" Opacity="0.5" Margin="0" RadiusX="3" RadiusY="3"/>
                            <TextBlock FontFamily="Arial" FontSize="20" FontWeight="Bold" Foreground="White" Margin="2,0,2,0" Text="{Binding HotkeyText}"/>
                        </Grid>

                        <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,2">
                            <Rectangle Fill="Black" Opacity="0.5" Margin="3" RadiusX="5" RadiusY="5"/>
                            <TextBlock x:Name="UnitSelection_Text" TextAlignment="Center" FontSize="20" FontWeight="Bold" Margin="7,5,7,0" Foreground="White" Text="{TemplateBinding Content}"/>
                        </Grid>

                        <Grid x:Name="ageReq" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="20" Width="20" Margin="5" Visibility="{Binding AgeReqVisibility, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
                            <Rectangle Fill="Black" Opacity="0.5" RadiusX="5" RadiusY="5"/>
                            <Image Source="{Binding AgeReqIconPath}" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BigButton">
        <Setter Property="FontFamily" Value="Trajan Pro"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="background">
                        <Rectangle Fill="#48361e" RadiusX="3" RadiusY="3"></Rectangle>
                        <Rectangle Fill="Black" RadiusX="3" RadiusY="3" Margin="2.5"></Rectangle>
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="6"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="8" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="8" Opacity="0"/>

                            <local:Age3ResourceTimer x:Name="timer" Style ="{StaticResource TimerStyle}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}" Margin="8"/>
                        </Grid>

                        <TextBlock x:Name="UnitSelection_Text" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="25" FontWeight="Bold" Foreground="White" Text="{TemplateBinding Content}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BigAbilityButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontFamily" Value="Trajan Pro"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="background">
                        <Rectangle Fill="#48361e" RadiusX="3" RadiusY="3"></Rectangle>
                        <Rectangle Fill="Black" RadiusX="3" RadiusY="3" Margin="2.5"></Rectangle>
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="6"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="8" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="8" Opacity="0"/>

                            <local:Age3ResourceTimer x:Name="timer" Style ="{StaticResource TimerStyle}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}" Margin="8"/>
                        </Grid>

                        <TextBlock x:Name="UnitSelection_Text" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="25" FontWeight="Bold" Foreground="White" Text="{TemplateBinding Content}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.025" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="QueueButton">
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="border" HorizontalAlignment="Center" VerticalAlignment="Center">

                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform />
                            </Grid.RenderTransform>
                            <Rectangle Fill="Black" RadiusX="5" RadiusY="5"></Rectangle>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="1.5"></Rectangle>
                            <Rectangle x:Name="glow" RadiusX="5" RadiusY="5" Margin="1.5" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="5" RadiusY="5" Margin="1.5" Opacity="0" />
                            <local:Age3ResourceTimer x:Name="timer" Style="{StaticResource TimerStyle}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}"/>
                        </Grid>

                        <TextBlock x:Name="QueuePanel_Text" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Foreground="White" Text="{TemplateBinding Content}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="glow2" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="ButtonBody" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining HUD button-->
    <Style TargetType="{x:Type Button}" x:Key="HUDButton">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Background" Value="#36270f" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" Background="{TemplateBinding Background}">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#4f4731" Offset="0.0" />
                                        <GradientStop Color="#b79f66" Offset="0.5" />
                                        <GradientStop Color="#4f4731" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <local:Age3ResourceTimer x:Name="timer" Style="{StaticResource TimerStyle}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}"/>
                            <Rectangle Name="iconOverlay" Fill="Black" RadiusX="3" RadiusY="3" Opacity="0.3" Visibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#141414" Offset="0" />
                                        <GradientStop Color="#393939" Offset="0.15" />
                                        <GradientStop Color="#535353" Offset="0.40" />
                                        <GradientStop Color="#535353" Offset="0.60" />
                                        <GradientStop Color="#393939" Offset="0.85" />
                                        <GradientStop Color="#141414" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#5b5b5b" Offset="0" />
                                                <GradientStop Color="#c0c0c0" Offset="0.25" />
                                                <GradientStop Color="#c0c0c0" Offset="0.75" />
                                                <GradientStop Color="#5b5b5b" Offset="1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" TargetName="iconOverlay" Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Defining HUD Compass button-->
    <Style TargetType="{x:Type Button}" x:Key="HUDButtonCompass">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="60" Width="60">
                        <Ellipse Height="60" Width="60"  Fill="Black" />
                        <Ellipse x:Name="ButtonBackground" Height="56" Width="56" Fill="#36270f" Stroke="{StaticResource ButtonStrokeGradient}" StrokeThickness="2" />
                        <Rectangle x:Name="banner_icon" Height="55" Width="55" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Fill="{TemplateBinding Background}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Fill" TargetName="ButtonBackground">
                                <Setter.Value>
                                    <SolidColorBrush Color="#9d712a" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Fill" TargetName="ButtonBackground">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MiniMap Details-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="MinimapDetails">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="60" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsThreeState" Value="True"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Height="60" Width="60">
                        <Ellipse Height="60" Width="60"  Fill="Black" />
                        <Ellipse x:Name="ButtonBackground" Height="56" Width="56" Fill="#36270f" Stroke="{StaticResource ButtonStrokeGradient}" StrokeThickness="2" />
                        <!--<Rectangle x:Name="banner_icon" Height="55" Width="55" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Fill="{TemplateBinding Background}" />-->
                        <Image x:Name="image" Height="50" Width="50" Source="{StaticResource hud_icon_compass_mapdetails}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Fill" TargetName="ButtonBackground">
                                <Setter.Value>
                                    <SolidColorBrush Color="#9d712a" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="0.95" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="0.95" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Fill" TargetName="ButtonBackground">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="image" Property="Source" Value="{StaticResource hud_icon_compass_mapdetails}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="image" Property="Source" Value="{StaticResource hud_icon_compass_mapdetails_military_only}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="image" Property="Source" Value="{StaticResource hud_icon_compass_mapdetails_economic_only}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Defining ContextMenu-->
    <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border x:Name="Border" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Skirmish, Home City Info-->
    <Style TargetType="{x:Type TextBlock}" x:Key="hcStatus">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--Skirmish, Home City Creator, Button-->
    <Style TargetType="{x:Type Button}" x:Key="hcCreator">
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="550" />
        <Setter Property="Background" Value="#FF595959" />
    </Style>

    <!--Skirmish, Home City Creator, Name-->
    <Style TargetType="{x:Type TextBlock}" x:Key="hcName">
        <Setter Property="Width" Value="470" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="Black" Direction="-90" ShadowDepth="4" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Skirmish, Home City Creator, Info Title-->
    <Style TargetType="{x:Type TextBlock}" x:Key="hcInfoTitle">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="325" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}"/>
        <Setter Property="Margin" Value="0,10,0,-10" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--Skirmish, Home City Creator, Info Name-->
    <Style TargetType="{x:Type TextBox}" x:Key="hcInfoName">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#d5d5d5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxLength" Value="30"/>
        <!-- broken in WPFG -->
        <!--<Setter Property="CaretBrush" Value="White"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" CornerRadius="4" Padding="12,0,0,0" Background="{StaticResource TextboxInnerGradient}" BorderBrush="{StaticResource TextboxStrokeGradient}" BorderThickness="2" Height="40">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFDADADA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFA4A4A4" />
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Skirmish, Home City Creator, Info Name-->
    <Style TargetType="{x:Type local:PreviewTextBox}" x:Key="{x:Type local:PreviewTextBox}">
        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#d5d5d5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="MaxLength" Value="30"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="12,0,0,0"/>
        <!-- broken in WPFG -->
        <!--<Setter Property="CaretBrush" Value="White"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PreviewTextBox}">
                    <Border x:Name="Border" CornerRadius="4" Background="{StaticResource TextboxInnerGradient}" BorderBrush="{StaticResource TextboxStrokeGradient}" 
                            BorderThickness="2" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}">
                        <Grid >
                            <ScrollViewer x:Name="PART_ContentHost" Background="Red"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
                            <TextBlock x:Name="PreviewContent" Text="{TemplateBinding PreviewText}" TextAlignment="{TemplateBinding TextAlignment}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFDADADA" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PreviewContent" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFA4A4A4" />
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFA4A4A4" />
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="hcListItem">
        <Setter Property="Height" Value="45" />
        <Setter Property="Width" Value="540" />
        <Setter Property="Margin" Value="-15,0,0,0" />
        <Setter Property="Background" Value="{StaticResource button_filemanager_hover}" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="7" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">

                            <Trigger.EnterActions>

                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseover">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.015" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.015" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>

                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseoverexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">

                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.03" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.03" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselectedexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <Setter TargetName="Border" Property="Background" Value="{StaticResource button_filemanager_selected}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Green" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ItemBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ListViewItemGradient}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="6"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ListViewItemGradientOver}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ListViewItemGradientOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ItemTextStyle" TargetType="FrameworkElement">
        <Setter Property="TextBlock.FontFamily" Value="Trajan Pro" />
        <Setter Property="TextBlock.FontSize" Value="21" />
        <Setter Property="TextBlock.Foreground" Value="White" />
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.MaxWidth" Value="400"/>
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextBlock.Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Skirmish, Deck Builder, Decks ListBoxItem-->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="basicListItem">
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="495" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="7" CornerRadius="4" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseover">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.015" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.015" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseoverexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{StaticResource ListViewItemGradientOver}" />
                            <Setter Property="Foreground" Value="#f6f6f6" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.015" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.015" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{StaticResource ListViewItemGradientOver}" />
                            <Setter Property="Foreground" Value="#f6f6f6" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.03" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.03" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselectedexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{StaticResource ListViewItemGradientSelected}" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Green" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource basicListItem}" x:Key="deckListItem">
        <Setter Property="Width" Value="470" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Padding="10" Width="380" Text="{Binding Name}" VerticalAlignment="Center" />
                        <Image Source="/resources/skirmish_cards_white.png" Height="30" Width="30" Margin="10,0,0,0" />
                        <TextBlock Padding="10" Width="50" Margin="0,0,0,0" Text="{Binding Number}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="deckCardsListBoxItem">
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="5,8,5,5"/>
        <Setter Property="ToolTip" Value="{Binding Tooltip}" />

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>

                            <Rectangle Fill="Black" RadiusX="3" RadiusY="3"></Rectangle>

                            <Rectangle Fill="{Binding ImageData}" RadiusX="5" RadiusY="5" Margin="1.5"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0"/>

                            <Border Name="Border" Padding="2" CornerRadius="4" SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <!--When a card has been added to the deck-->
                            <Rectangle Fill="{StaticResource tick_icon}" Height="32" Width="32" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="5,5,7,5" Visibility="{Binding TickIconVisible}"/>
                            <!--For mercenaries & food-->
                            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,5,3" Visibility="{Binding mercGold}">
                                <Rectangle HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Height="26" Width="28" Opacity="0.5" RadiusX="5" RadiusY="5"/>
                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="30" Width="30" Source="resources/images/hud/resource_gold.png"/>
                            </Grid>
                            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,5,4" Visibility="{Binding mercMeat}">
                                <Rectangle HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Height="25" Width="25" Opacity="0.5" RadiusX="5" RadiusY="5"/>
                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="25" Width="25" Source="resources/images/hud/resource_food.png"/>
                            </Grid>
                            <!--For infinite (purple) cards-->
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="8,0,0,0" Visibility="{Binding InfinityIconVisible}">
                                <Rectangle Fill="Black" Margin="-1,6,-1,0" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                                <TextBlock FontFamily="Arial" Foreground="White" FontWeight="Bold" FontSize="25" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Text="∞" Visibility="Visible"/>
                            </Grid>
                            <!--For 2x (red) Japanese cards-->
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="8,0,0,0" Visibility="{Binding TwoTimesIconVisible}">
                                <Rectangle Fill="Black" Margin="-1,6,-1,0" RadiusX="5" RadiusY="5" Opacity="0.6"/>
                                <TextBlock FontFamily="Trajan Pro" Foreground="White" FontWeight="Bold" FontSize="12" Margin="-1,10,-1,0" VerticalAlignment="Center" HorizontalAlignment="Center" Text="2x" Visibility="Visible"/>
                            </Grid>
                            <!--Amount given through shipment-->
                            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="6,0,0,5" Visibility="Visible">
                                <Rectangle Fill="Black" Margin="-1,0,-1,0" RadiusX="5" RadiusY="5" Opacity="0.5"/>
                                <TextBlock FontFamily="Arial" Foreground="White" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding AmountOfResources}"/>
                            </Grid>
                            <Rectangle Fill="{Binding Color}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter Property="Background" Value="{Binding ImageData}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientSelected}" />
                            -->
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_02.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                            <!--<Setter Property="Background"  Value="{Binding ImageData}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}" />
                            -->
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">


                            <!--<Setter Property="Background"  Value="{Binding ImageData}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}" />
                            -->
                        </Trigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource deckCardsListBoxItem}" x:Key="chatpanelToPlayers">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border Name="Border" Padding="2" Background="{Binding ImageData}" BorderThickness="2" CornerRadius="4" BorderBrush="{StaticResource ComboBoxStrokeGradient}" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="historyListItem">
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Margin" Value="40,0,0,0" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="{Binding Text}" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="10,5,0,0" CornerRadius="4" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseover">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.015" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.015" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listisselectedexit" />
                                <BeginStoryboard x:Name="listmouseoverexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav"/>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{StaticResource ListViewItemGradientOver}" />
                            <Setter Property="Foreground" Value="#f6f6f6" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.03" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.03" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="listmouseover" />
                                <RemoveStoryboard BeginStoryboardName="listmouseoverexit" />
                                <BeginStoryboard x:Name="listisselectedexit">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{StaticResource ListViewItemGradientSelected}" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="MinHeight" Value="30" />
                            <Setter Property="Height" Value="auto" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Margin" Value="0,10,0,0" />
                            <Setter Property="FontSize" Value="21" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Player Summary, Title Properties-->
    <Style TargetType="{x:Type TextBlock}" x:Key="playerSummaryTextStyles">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0,0,0" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="TextBlock" x:Key="noteTextStyle">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="4" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" Background="Transparent">
                        <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" 
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="ContentPanel" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Defining TabItem-->
    <Style x:Key="{x:Type TabItem}" TargetType="TabItem">
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource LightBrush}"/>
        <Setter Property="ContentTemplate" Value="{x:Null}"/>
        <Setter Property="ContentTemplateSelector" Value="{x:Null}"/>
        <Setter Property="HeaderTemplate" Value="{x:Null}"/>
        <Setter Property="HeaderTemplateSelector" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="Border" Margin="0,0,-4,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="4">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="mpChatTextStyle1">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="RegularCombobox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Width" Value="130" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,5,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#1c150c" BorderThickness="2" BorderBrush="#4f4731" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="ToggleButton" Property="Template" Value="{StaticResource ComboBoxToggleButtonOver}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                        <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:Age3PopoverControl}" TargetType="local:Age3PopoverControl">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:Age3PopoverControl">
                        <!-- Popover Content -->
                        <Grid Width="0">
                            <FrameworkElement Name="PART_Target" Height="{TemplateBinding Height}"/>
                            <Popup Name="PART_Popup" IsOpen="{Binding IsPopoverOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" 
                                    StaysOpen="{TemplateBinding StaysOpen}" 
                                    PopupAnimation="{TemplateBinding PopoverAnimation}" 
                                    Placement="{TemplateBinding Placement}" PlacementTarget="{Binding ElementName=PART_Target}"
                                    Height="{Binding ActualHeight, ElementName=PART_Target, FallbackValue=NaN, Mode=OneWay}"
                                >
                                <!--Height="600"-->
                                <Border Background="{StaticResource wood_tile}" MinWidth="100" MinHeight="100">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0" Width="3" Margin="0,0,3,0" VerticalAlignment="Stretch" Fill="{StaticResource DividingLineGradient_Vertical}"/>
                                        <Frame Grid.Column="1" Source="{TemplateBinding PopoverPage}" Focusable="False"/>
                                        <ContentPresenter Name="PART_Content" Grid.ColumnSpan="2" Grid.Column="0" VerticalAlignment="Stretch"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--Home City, Multiplayer Titles-->
    <Style TargetType="TextBlock" x:Key="mpHomeCityTitles">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="Black" Direction="-90" ShadowDepth="4" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Home City, Multiplayer-->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="mpHomeCity">
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="880" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Gray" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="200" Height="60" Background="Pink" Foreground="White" Text="10" TextAlignment="Right" Padding="15" />
                        <Rectangle Width="210" />
                        <TextBlock Width="400" Foreground="White" Text="St.Petersburg" TextAlignment="Right" Padding="15" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="GameListTabs">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Margin" Value="-20,0,0,0" />


        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="10,0,0,0" Background="Transparent" BorderThickness="2" CornerRadius="4">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True">
                            </ContentPresenter>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#4f4731" Offset="0.0" />
                                            <GradientStop Color="#b79f66" Offset="0.5" />
                                            <GradientStop Color="#4f4731" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="#5c441d" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="-100" />
                            <Setter TargetName="Border" Property="Background" Value="#36270f" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#444444" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="DarkGray" />
                        </Trigger>

                        <!--Audio Trigger-->
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type Button}" x:Key="FlagButton">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="2" Background="{TemplateBinding Background}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" />
                        </Border.BorderBrush>
                        <Grid>
                            <local:Age3ResourceTimer x:Name="timer" Height="50" Width="50" Style="{StaticResource TimerStyle}" DisplayState="{Binding TimerState, FallbackValue=NoOverlay, TargetNullValue=NoOverlay}"/>

                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,5" FontSize="25" FontWeight="Bold" Foreground="White" Text="{TemplateBinding Content}">
                                <TextBlock.Effect>
                                    <DropShadowEffect BlurRadius="4" Color="Black" Direction="-60" ShadowDepth="4" RenderingBias="Quality" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>


                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>



                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scenario Editor, Labels-->
    <Style TargetType="TextBlock" x:Key="scenarioEditorLabel">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="15" />
    </Style>

    <!--Scenario Editor, Textbox-->
    <Style TargetType="TextBox" x:Key="scnearioEditorTextbox">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#d5d5d5" />
        <Setter Property="Background" Value="{StaticResource skirmishnickname_textentry_fill}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" CornerRadius="0" Padding="5" Background="{StaticResource skirmishnickname_textentry_fill}" BorderBrush="Transparent" BorderThickness="1">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scenario Editor, Buttons-->
    <Style TargetType="{x:Type Button}" x:Key="scenarioEditorButton">
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="Height" Value="35" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="18" Foreground="{StaticResource ButtonTextGradient}" Margin="0,5,0,0" Text="{Binding Path=Content,RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
                        </TextBlock.Effect>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1.7" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="2" CornerRadius="4" BorderBrush="{StaticResource MainMenuButtonStrokeGradient}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="0" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MainMenuButtonInnerGradientOver}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.01" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.01" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MainMenuButtonInnerGradientPress}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MainMenuButtonInnerGradientDisabled}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuButtonStrokeGradientDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scenario Editor Esc Button-->
    <Style TargetType="{x:Type Button}" x:Key="scenarioEscButton">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Margin" Value="20,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#36270f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="3" CornerRadius="4" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#4f4731" Offset="0.0" />
                                        <GradientStop Color="#b79f66" Offset="0.5" />
                                        <GradientStop Color="#4f4731" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="0" RenderingBias="Quality" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/bigbutton.wav"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TechTreeLegendBuilding">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_buildings}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70748$$Buildings">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendUnits">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_units}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70749$$Units">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendImprovements">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_improvements}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70750$$Improvements">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendAllies">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_allies}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70752$$Allies">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendArmies">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_armies}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70754$$Armies">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendDances">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_dances}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70751$$Ceremonies">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TechTreeLegendShipments">
        <Grid Height="50" Width="385">
            <Image HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Source="{StaticResource techbanner_shipments}"></Image>

            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Width="280" Height="25" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="21" Text="$$70753$$Shipments">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <!--File Manager, List Manager-->
    <Style TargetType="{x:Type ListView}" x:Key="friendsListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,15,20,15" />
        <Setter Property="Padding" Value="-1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="FontFamily" Value="Trajan Pro" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#FF36270F" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="5">
                        <StackPanel x:Name="Items" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Padding" Value="10" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="10" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AvatarTemplate">
        <Grid>
            <!-- Show a ? in case the avatar isn't available (from a future version of the game etc) -->
            <Viewbox VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Text="?" Margin="0" Style="{StaticResource ConfirmationTitlesStyle}" TextAlignment="Center" VerticalAlignment="Center" />
            </Viewbox>
            <Rectangle RadiusX="4" RadiusY="4" >
                <Rectangle.Fill>
                    <ImageBrush ImageSource="{Binding Avatar, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"/>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
    </DataTemplate>


    <Style TargetType="{x:Type Button}" x:Key="AvatarButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="200" />
        <Setter Property="Width" Value="200" />
        <Setter Property="ContentTemplate" Value="{StaticResource AvatarTemplate}"/>
        <Setter Property="Background" Value="#36270f" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Name="border" BorderThickness="2" CornerRadius="4" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{StaticResource ComboBoxStrokeGradient}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientSelected}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ComboBoxStrokeGradientOver}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#262626" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxStrokeGradientDisabled}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="resources/audio/bigbutton.wav" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip" x:Key="RankTooltips">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="MaxWidth" Value="960"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="#d6c894"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="VerticalOffset" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Opacity" Value="{Binding Path=OptionTooltipBackgroundAlpha}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="Border" Background="#34221c" BorderBrush="#6f683f" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter Margin="7,5,7,5" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Set this style on a ContextMenu and make sure it's Tag is an Age3ProfileInfo and you're all set -->
    <Style x:Key="ProfileContextMenu" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource ContextMenuStyle}">
        <Setter Property="ItemsSource" Value="{Binding Tag.Actions, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding }"/>
                    <Setter Property="Header" Value="{Binding Description}"/>
                    <Setter Property="ToolTip" Value="{Binding Tooltip}"/>
                    <Setter Property="Icon" Value="{Binding Icon}"/>
                    <Style.Triggers>
                        <!--Hide disabled options -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InviteActionButton" TargetType="Button" BasedOn="{StaticResource SubMenuButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ContentTemplate" Value="{StaticResource {x:Type BitmapImage}}"/>
    </Style>

    <!-- set this on a button where the Content property is a ProfileAction -->
    <Style x:Key="ProfileActionButton" TargetType="Button" BasedOn="{StaticResource InviteActionButton}">
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{Binding Icon}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter" Value="{Binding }"/>
        <Setter Property="Command" Value="{Binding Content, RelativeSource={x:Static RelativeSource.Self}}"/>
        <Setter Property="ToolTip" Value="{Binding Content.Tooltip, RelativeSource={x:Static RelativeSource.Self}}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ViewProfileButton" TargetType="Button" BasedOn="{StaticResource InviteActionButton}">
        <Setter Property="Content" Value="{Binding Avatar}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource AvatarTemplate}"/>
        <Setter Property="CommandParameter" Value="{Binding }"/>
        <Setter Property="Command" Value="{Binding ViewProfile}"/>
        <Setter Property="ToolTip" Value="{Binding ViewProfile.Tooltip}"/>
    </Style>

    <ImageBrush x:Key="titlebarbg" ImageSource="/resources/titlebar_tile.png" />

    <LinearGradientBrush x:Key="TitlebarGradientOverlay" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#090807" Offset="0" />
        <GradientStop Color="#cfab7f" Offset="0.25" />
        <GradientStop Color="#cfab7f" Offset="0.75" />
        <GradientStop Color="#090807" Offset="1" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="Titlebar">
        <Grid Height="50" VerticalAlignment="Top">
            <Rectangle Fill="{StaticResource titlebarbg}"></Rectangle>
            <Rectangle Fill="{StaticResource TitlebarGradientOverlay}" Opacity="0.25"></Rectangle>
            <Rectangle Height="4" Fill="Black" VerticalAlignment="Bottom"></Rectangle>
            <Rectangle Height="2" Fill="{StaticResource ButtonStrokeGradient}" VerticalAlignment="Bottom" Margin="0,0,0,1"></Rectangle>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="PanelBG">
        <Grid>
            <local:Age3PanelBG Stroke="Black" StrokeThickness="8" Margin="18,18,12,14">

                <local:Age3PanelBG.Fill>
                    <ImageBrush ImageSource="/resources/wood.png" />
                </local:Age3PanelBG.Fill>
            </local:Age3PanelBG>
            <local:Age3PanelBG Fill="Transparent" Stroke="{StaticResource PanelBGStrokeGradient}" StrokeThickness="3" Margin="20" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="PanelBG_Titled">
        <Grid>
            <local:Age3PanelBG Stroke="Black" StrokeThickness="8" Margin="18,18,12,14">

                <local:Age3PanelBG.Fill>
                    <ImageBrush ImageSource="/resources/wood.png" />
                </local:Age3PanelBG.Fill>
            </local:Age3PanelBG>
            <Rectangle Height="128" VerticalAlignment="Top" Margin="26,90,28,0">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/wood_shadow.png" />
                </Rectangle.Fill>
            </Rectangle>
            <local:Age3PanelBG Fill="Transparent" Stroke="{StaticResource PanelBGStrokeGradient}" StrokeThickness="3" Margin="20" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type Control}" x:Key="Ingame_PanelBGStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <local:Age3PanelBG Stroke="Black" Tag="10" StrokeThickness="6" Margin="18,18,13,15">
                            <local:Age3PanelBG.Fill>
                                <ImageBrush ImageSource="/resources/wood.png" />
                            </local:Age3PanelBG.Fill>
                        </local:Age3PanelBG>
                        <local:Age3PanelBG Fill="Transparent" Tag="10" Stroke="{StaticResource PanelBGStrokeGradient}" StrokeThickness="2" Margin="20" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <ControlTemplate x:Key="ScreenBlur">
        <Grid>
            <Rectangle x:Name="Rectangle" Fill="#1f1c17" Opacity="0.4"></Rectangle>
        </Grid>

    </ControlTemplate>

    <Style TargetType="{x:Type Grid}" x:Key="PopupGrid">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="1" Y="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0" BeginTime="0:0:0" Duration="0:0:0" />
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" BeginTime="0:0:0.5" Duration="0:0:0.5" />
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" From="25" BeginTime="0:0:0.5" To="0" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:1" />
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" From="0" To="100" Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="HistoryContentGrid">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="1" Y="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0" BeginTime="0:0:0" Duration="0:0:0" />
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" BeginTime="0:0:0.1" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="TechTreeItem">
        <Grid Height="74" Width="360" ToolTip="{Binding TooltipText}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="68" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Rectangle x:Name="Banner" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="-10,4,0,0" Fill="{Binding Banner}"/>

            <Rectangle x:Name="RectangleIcon" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" Height="74" Width="54" Margin="0,0,0,0" Fill="{Binding RectangleData}"/>

            <Rectangle x:Name="ImageIcon" Grid.Column="0" HorizontalAlignment="Left" Height="64" Width="64" Margin="2,0,0,1" Fill="{Binding ImageData}"/>

            <Rectangle x:Name="ImageFade" Grid.Column="0" HorizontalAlignment="Left" Height="64" Width="64" Margin="0,0,0,0" Fill="#1c1004" Opacity="0"/>

            <Rectangle x:Name="BannerFade" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Fill="#1c1004" Opacity="0">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="pack://application:,,,/resources/images/techtree/techbanner_allies.png" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock Grid.Column="2" x:Name="TextTitle" HorizontalAlignment="Left" VerticalAlignment="Center" Width="250" TextWrapping="Wrap" Height="auto" MaxHeight="45" Margin="5,0,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="18" Text="{Binding Title}">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>

        <ControlTemplate.Triggers>

            <!--Unlocked but not Active + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="1" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.6" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.6" />
            </MultiDataTrigger>

            <!--Unlocked but not Active + MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="1" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.4" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.4" />
            </MultiDataTrigger>

            <!--Active + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="2" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0" />
            </MultiDataTrigger>

            <!--Locked + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="2" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.75" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.75" />
                <!--Create some kind of pixel shader or effect to desaturate images
                            <Setter TargetName="ImageIcon" Property="(effect:GrayscaleEffect.DesaturationFactor)" Value="1"/>
                            <Setter TargetName="Banner" Property="(effect:GrayscaleEffect.DesaturationFactor)" Value="1"/>
                            -->
            </MultiDataTrigger>

            <!--Testing basic mouseover trigger
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.75" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.75" />
            </Trigger>
            -->

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="TechTreeItem_Test">
        <Grid Height="74" Width="400" ToolTip="{Binding TooltipText}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="64" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Rectangle x:Name="Banner" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="-10,4,0,0" Fill="{Binding Banner}"/>

            <Rectangle x:Name="RectangleIcon" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" Height="74" Width="54" Margin="0,0,0,0" Fill="{Binding RectangleData}"/>

            <Rectangle x:Name="ImageIcon" Grid.Column="0" HorizontalAlignment="Left" Height="64" Width="64" Margin="0,0,0,0" Fill="{Binding ImageData}"/>

            <Rectangle x:Name="ImageFade" Grid.Column="0" HorizontalAlignment="Left" Height="64" Width="64" Margin="0,0,0,0" Fill="#1c1004" Opacity="0"/>

            <Rectangle x:Name="BannerFade" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="50" Width="385" Margin="0,4,0,0" Fill="#1c1004" Opacity="0">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="pack://application:,,,/resources/images/techtree/techbanner_allies.png" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock Grid.Column="2" x:Name="TextTitle" HorizontalAlignment="Left" VerticalAlignment="Center" Width="270" TextWrapping="Wrap" Height="auto" MaxHeight="45" Margin="5,4,0,0" FontWeight="Bold" FontFamily="Trajan Pro" Foreground="White" FontSize="18" Text="{Binding Title}">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="1" RenderingBias="Quality" />
                </TextBlock.Effect>
            </TextBlock>
        </Grid>

        <ControlTemplate.Triggers>

            <!--Unlocked but not Active + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="1" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.6" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.6" />
            </MultiDataTrigger>

            <!--Unlocked but not Active + MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="1" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.4" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.4" />
            </MultiDataTrigger>

            <!--Active + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="2" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0" />
            </MultiDataTrigger>

            <!--Locked + No MouseOver-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=State}" Value="2" />

                </MultiDataTrigger.Conditions>
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.75" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.75" />
                <!--Create some kind of pixel shader or effect to desaturate images
                            <Setter TargetName="ImageIcon" Property="(effect:GrayscaleEffect.DesaturationFactor)" Value="1"/>
                            <Setter TargetName="Banner" Property="(effect:GrayscaleEffect.DesaturationFactor)" Value="1"/>
                            -->
            </MultiDataTrigger>

            <!--Testing basic mouseover trigger
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ImageFade" Property="Opacity" Value="0.75" />
                <Setter TargetName="BannerFade" Property="Opacity" Value="0.75" />
            </Trigger>
            -->

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Rectangle" x:Key="SmokeRect">
        <Setter Property="Height" Value="512" />
        <Setter Property="Width" Value="3840" />
        <Setter Property="Margin" Value="0,50" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0" Y="0" />
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FF36270F"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FFFFEEC1"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FF856126"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FF36270F"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FFA98C3E"/>
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FFFEE5A4"/>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                            </Grid>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource Age3FocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
